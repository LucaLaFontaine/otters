Search.setIndex({"alltitles": {"AHU": [[80, null]], "CalcPsychrometricsFromRelHum": [[127, null]], "CalcPsychrometricsFromTDewPoint": [[128, null]], "CalcPsychrometricsFromTWetBulb": [[129, null]], "Classes": [[205, "classes"], [206, "classes"], [207, "classes"]], "DowntimeEvent": [[1, null]], "ExPS": [[0, null], [5, null]], "ExPSStyleName": [[48, null]], "FREEZING_POINT_WATER_IP": [[130, null]], "FREEZING_POINT_WATER_SI": [[131, null]], "GetDegreeOfSaturation": [[132, null]], "GetDryAirDensity": [[133, null]], "GetDryAirEnthalpy": [[134, null]], "GetDryAirVolume": [[135, null]], "GetHumRatioFromEnthalpyAndTDryBulb": [[136, null]], "GetHumRatioFromRelHum": [[137, null]], "GetHumRatioFromSpecificHum": [[138, null]], "GetHumRatioFromTDewPoint": [[139, null]], "GetHumRatioFromTWetBulb": [[140, null]], "GetHumRatioFromVapPres": [[141, null]], "GetMoistAirDensity": [[142, null]], "GetMoistAirEnthalpy": [[143, null]], "GetMoistAirVolume": [[144, null]], "GetRelHumFromHumRatio": [[145, null]], "GetRelHumFromTDewPoint": [[146, null]], "GetRelHumFromTWetBulb": [[147, null]], "GetRelHumFromVapPres": [[148, null]], "GetSatAirEnthalpy": [[149, null]], "GetSatHumRatio": [[150, null]], "GetSatVapPres": [[151, null]], "GetSeaLevelPressure": [[152, null]], "GetSpecificHumFromHumRatio": [[153, null]], "GetStandardAtmPressure": [[154, null]], "GetStandardAtmTemperature": [[155, null]], "GetStationPressure": [[156, null]], "GetTCelsiusFromTKelvin": [[157, null]], "GetTDewPointFromHumRatio": [[158, null]], "GetTDewPointFromRelHum": [[159, null]], "GetTDewPointFromTWetBulb": [[160, null]], "GetTDewPointFromVapPres": [[161, null]], "GetTDryBulbFromEnthalpyAndHumRatio": [[162, null]], "GetTDryBulbFromMoistAirVolumeAndHumRatio": [[163, null]], "GetTFahrenheitFromTRankine": [[164, null]], "GetTKelvinFromTCelsius": [[165, null]], "GetTRankineFromTFahrenheit": [[166, null]], "GetTWetBulbFromHumRatio": [[167, null]], "GetTWetBulbFromRelHum": [[168, null]], "GetTWetBulbFromTDewPoint": [[169, null]], "GetUnitSystem": [[170, null]], "GetVapPresFromHumRatio": [[171, null]], "GetVapPresFromRelHum": [[172, null]], "GetVapPresFromTDewPoint": [[173, null]], "GetVaporPressureDeficit": [[174, null]], "Graph": [[12, null], [88, null]], "Important Functions": [[201, null]], "LinearRegression": [[53, null]], "MAX_ITER_COUNT": [[175, null]], "MIN_HUM_RATIO": [[176, null]], "Model": [[63, null]], "Models": [[65, null]], "Modules": [[204, null]], "Notes": [[53, "notes"], [59, "notes"]], "PPTGen": [[47, null]], "Parameters": [[53, "parameters"], [53, "id2"], [53, "id4"], [53, "id6"], [53, "id8"], [53, "id10"], [53, "id14"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"]], "Plot": [[21, null], [91, null]], "R_DA_IP": [[177, null]], "R_DA_SI": [[178, null]], "Regression": [[52, null], [69, null]], "Returns": [[53, "returns"], [53, "id1"], [53, "id3"], [53, "id5"], [53, "id7"], [53, "id9"], [53, "id13"], [53, "id15"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"]], "SetUnitSystem": [[179, null]], "Sub-modules": [[208, "sub-modules"]], "TRIPLE_POINT_WATER_IP": [[180, null]], "TRIPLE_POINT_WATER_SI": [[181, null]], "UnitSystem": [[182, null]], "VirtualMeter": [[79, null], [82, null]], "Visualization (Vis)": [[207, null]], "Welcome to the Otters Docs": [[202, null]], "Wrangle": [[208, null]], "ZERO_CELSIUS_AS_KELVIN": [[183, null]], "ZERO_FAHRENHEIT_AS_RANKINE": [[184, null]], "]": [[82, "id3"], [86, "id3"]], "__init__": [[2, null], [6, null], [13, null], [22, null], [49, null], [54, null], [64, null], [66, null], [70, null], [81, null], [83, null], [89, null], [92, null]], "addAreaLines": [[23, null], [93, null]], "addAvgProdLine": [[24, null]], "addLegendLabels": [[25, null]], "addLines": [[26, null], [94, null]], "addLowAchievedLine": [[27, null]], "addScatter": [[28, null], [95, null]], "addSlide": [[50, null]], "addWTAPSchedule": [[29, null]], "boundYAxis": [[30, null], [96, null]], "cleanColNamesEMS": [[84, null]], "compare_lists": [[194, null]], "createAHU": [[85, null]], "createDTEventLabel": [[31, null]], "createPPT": [[7, null]], "createPlot": [[32, null], [97, null]], "createTimeline": [[33, null], [98, null]], "create_conn": [[108, null]], "create_db": [[109, null]], "dLnPws_": [[185, null]], "db_loader": [[107, null]], "dedupe": [[110, null]], "file_loader": [[115, null]], "find_strs": [[195, null]], "fit": [[55, null]], "formatData": [[116, null]], "formatXAxis": [[34, null], [99, null]], "formatYAxis": [[35, null], [100, null]], "formatYAxisUnits": [[36, null]], "full_setup": [[37, null], [101, null]], "gapAndIsland": [[196, null]], "getCSV": [[8, null]], "getCSVDFs": [[117, null]], "getCV": [[71, null]], "getCVRMSE": [[72, null]], "getExcel": [[9, null]], "getExcelDFs": [[118, null]], "getFiles": [[119, null]], "getLastNWeeks": [[188, null]], "getNRowAvg": [[14, null]], "getNasaWeather": [[111, null]], "getR2": [[73, null]], "getRegEquation": [[74, null]], "getSQL": [[10, null]], "get_metadata_routing": [[56, null]], "get_params": [[57, null]], "get_table_gaz": [[120, null]], "get_table_tarif_M": [[121, null]], "granulizeData": [[38, null]], "graph": [[87, null]], "import_config": [[122, null]], "isIP": [[186, null]], "load": [[112, null]], "mergeCloseEvents": [[197, null]], "merge_df_cols": [[198, null]], "merge_dfs": [[199, null]], "model_component_graph": [[75, null]], "otters.drive": [[205, null]], "otters.model": [[206, null]], "overlayPast": [[189, null]], "ppt_gen": [[46, null]], "predict": [[58, null]], "psychrometrics": [[126, null]], "regress": [[76, null]], "regression": [[67, null]], "replace_backslashes_in_dict": [[123, null]], "save2xl": [[124, null]], "savePPT": [[11, null], [51, null]], "scaleDTick": [[39, null], [102, null]], "score": [[59, null]], "selectiveResample": [[190, null]], "setAvgNonProd": [[3, null]], "setAvgProd": [[15, null]], "setDf": [[16, null]], "setDowntimeEvents": [[17, null]], "setLowAchieved": [[18, null]], "setLowPercentage": [[19, null]], "setTargets": [[4, null]], "setYAxisRange": [[40, null], [103, null]], "set_fit_request": [[60, null]], "set_params": [[61, null]], "set_score_request": [[62, null]], "show": [[20, null], [41, null], [90, null], [104, null]], "showLastWeek": [[42, null]], "showLastYear": [[43, null]], "sparklines": [[44, null], [105, null]], "splitEntities": [[86, null]], "src": [[203, null]], "standardize_num_format": [[125, null]], "stats": [[77, null]], "str2dt": [[191, null]], "tabulateModels": [[68, null]], "time2timedelta": [[192, null]], "timeFormatXAxis": [[45, null], [106, null]], "time_tools": [[187, null]], "to_frame": [[78, null]], "ts2str": [[113, null]], "two_letter_month_to_number": [[200, null]], "upsert": [[114, null]], "wrangler": [[193, null]]}, "docnames": ["_autosummary/otters.drive.ExPS", "_autosummary/otters.drive.ExPS.DowntimeEvent", "_autosummary/otters.drive.ExPS.DowntimeEvent.__init__", "_autosummary/otters.drive.ExPS.DowntimeEvent.setAvgNonProd", "_autosummary/otters.drive.ExPS.DowntimeEvent.setTargets", "_autosummary/otters.drive.ExPS.ExPS", "_autosummary/otters.drive.ExPS.ExPS.__init__", "_autosummary/otters.drive.ExPS.ExPS.createPPT", "_autosummary/otters.drive.ExPS.ExPS.getCSV", "_autosummary/otters.drive.ExPS.ExPS.getExcel", "_autosummary/otters.drive.ExPS.ExPS.getSQL", "_autosummary/otters.drive.ExPS.ExPS.savePPT", "_autosummary/otters.drive.ExPS.Graph", "_autosummary/otters.drive.ExPS.Graph.__init__", "_autosummary/otters.drive.ExPS.Graph.getNRowAvg", "_autosummary/otters.drive.ExPS.Graph.setAvgProd", "_autosummary/otters.drive.ExPS.Graph.setDf", "_autosummary/otters.drive.ExPS.Graph.setDowntimeEvents", "_autosummary/otters.drive.ExPS.Graph.setLowAchieved", "_autosummary/otters.drive.ExPS.Graph.setLowPercentage", "_autosummary/otters.drive.ExPS.Graph.show", "_autosummary/otters.drive.ExPS.Plot", "_autosummary/otters.drive.ExPS.Plot.__init__", "_autosummary/otters.drive.ExPS.Plot.addAreaLines", "_autosummary/otters.drive.ExPS.Plot.addAvgProdLine", "_autosummary/otters.drive.ExPS.Plot.addLegendLabels", "_autosummary/otters.drive.ExPS.Plot.addLines", "_autosummary/otters.drive.ExPS.Plot.addLowAchievedLine", "_autosummary/otters.drive.ExPS.Plot.addScatter", "_autosummary/otters.drive.ExPS.Plot.addWTAPSchedule", "_autosummary/otters.drive.ExPS.Plot.boundYAxis", "_autosummary/otters.drive.ExPS.Plot.createDTEventLabel", "_autosummary/otters.drive.ExPS.Plot.createPlot", "_autosummary/otters.drive.ExPS.Plot.createTimeline", "_autosummary/otters.drive.ExPS.Plot.formatXAxis", "_autosummary/otters.drive.ExPS.Plot.formatYAxis", "_autosummary/otters.drive.ExPS.Plot.formatYAxisUnits", "_autosummary/otters.drive.ExPS.Plot.full_setup", "_autosummary/otters.drive.ExPS.Plot.granulizeData", "_autosummary/otters.drive.ExPS.Plot.scaleDTick", "_autosummary/otters.drive.ExPS.Plot.setYAxisRange", "_autosummary/otters.drive.ExPS.Plot.show", "_autosummary/otters.drive.ExPS.Plot.showLastWeek", "_autosummary/otters.drive.ExPS.Plot.showLastYear", "_autosummary/otters.drive.ExPS.Plot.sparklines", "_autosummary/otters.drive.ExPS.Plot.timeFormatXAxis", "_autosummary/otters.drive.ppt_gen", "_autosummary/otters.drive.ppt_gen.PPTGen", "_autosummary/otters.drive.ppt_gen.PPTGen.ExPSStyleName", "_autosummary/otters.drive.ppt_gen.PPTGen.__init__", "_autosummary/otters.drive.ppt_gen.PPTGen.addSlide", "_autosummary/otters.drive.ppt_gen.PPTGen.savePPT", "_autosummary/otters.model.Regression", "_autosummary/otters.model.Regression.LinearRegression", "_autosummary/otters.model.Regression.LinearRegression.__init__", "_autosummary/otters.model.Regression.LinearRegression.fit", "_autosummary/otters.model.Regression.LinearRegression.get_metadata_routing", "_autosummary/otters.model.Regression.LinearRegression.get_params", "_autosummary/otters.model.Regression.LinearRegression.predict", "_autosummary/otters.model.Regression.LinearRegression.score", "_autosummary/otters.model.Regression.LinearRegression.set_fit_request", "_autosummary/otters.model.Regression.LinearRegression.set_params", "_autosummary/otters.model.Regression.LinearRegression.set_score_request", "_autosummary/otters.model.Regression.Model", "_autosummary/otters.model.Regression.Model.__init__", "_autosummary/otters.model.Regression.Models", "_autosummary/otters.model.Regression.Models.__init__", "_autosummary/otters.model.Regression.Models.regression", "_autosummary/otters.model.Regression.Models.tabulateModels", "_autosummary/otters.model.Regression.Regression", "_autosummary/otters.model.Regression.Regression.__init__", "_autosummary/otters.model.Regression.Regression.getCV", "_autosummary/otters.model.Regression.Regression.getCVRMSE", "_autosummary/otters.model.Regression.Regression.getR2", "_autosummary/otters.model.Regression.Regression.getRegEquation", "_autosummary/otters.model.Regression.Regression.model_component_graph", "_autosummary/otters.model.Regression.Regression.regress", "_autosummary/otters.model.Regression.Regression.stats", "_autosummary/otters.model.Regression.Regression.to_frame", "_autosummary/otters.model.VirtualMeter", "_autosummary/otters.model.VirtualMeter.AHU", "_autosummary/otters.model.VirtualMeter.AHU.__init__", "_autosummary/otters.model.VirtualMeter.VirtualMeter", "_autosummary/otters.model.VirtualMeter.VirtualMeter.__init__", "_autosummary/otters.model.VirtualMeter.VirtualMeter.cleanColNamesEMS", "_autosummary/otters.model.VirtualMeter.VirtualMeter.createAHU", "_autosummary/otters.model.VirtualMeter.VirtualMeter.splitEntities", "_autosummary/otters.vis.graph", "_autosummary/otters.vis.graph.Graph", "_autosummary/otters.vis.graph.Graph.__init__", "_autosummary/otters.vis.graph.Graph.show", "_autosummary/otters.vis.graph.Plot", "_autosummary/otters.vis.graph.Plot.__init__", "_autosummary/otters.vis.graph.Plot.addAreaLines", "_autosummary/otters.vis.graph.Plot.addLines", "_autosummary/otters.vis.graph.Plot.addScatter", "_autosummary/otters.vis.graph.Plot.boundYAxis", "_autosummary/otters.vis.graph.Plot.createPlot", "_autosummary/otters.vis.graph.Plot.createTimeline", "_autosummary/otters.vis.graph.Plot.formatXAxis", "_autosummary/otters.vis.graph.Plot.formatYAxis", "_autosummary/otters.vis.graph.Plot.full_setup", "_autosummary/otters.vis.graph.Plot.scaleDTick", "_autosummary/otters.vis.graph.Plot.setYAxisRange", "_autosummary/otters.vis.graph.Plot.show", "_autosummary/otters.vis.graph.Plot.sparklines", "_autosummary/otters.vis.graph.Plot.timeFormatXAxis", "_autosummary/otters.wrangle.db_loader", "_autosummary/otters.wrangle.db_loader.create_conn", "_autosummary/otters.wrangle.db_loader.create_db", "_autosummary/otters.wrangle.db_loader.dedupe", "_autosummary/otters.wrangle.db_loader.getNasaWeather", "_autosummary/otters.wrangle.db_loader.load", "_autosummary/otters.wrangle.db_loader.ts2str", "_autosummary/otters.wrangle.db_loader.upsert", "_autosummary/otters.wrangle.file_loader", "_autosummary/otters.wrangle.file_loader.formatData", "_autosummary/otters.wrangle.file_loader.getCSVDFs", "_autosummary/otters.wrangle.file_loader.getExcelDFs", "_autosummary/otters.wrangle.file_loader.getFiles", "_autosummary/otters.wrangle.file_loader.get_table_gaz", "_autosummary/otters.wrangle.file_loader.get_table_tarif_M", "_autosummary/otters.wrangle.file_loader.import_config", "_autosummary/otters.wrangle.file_loader.replace_backslashes_in_dict", "_autosummary/otters.wrangle.file_loader.save2xl", "_autosummary/otters.wrangle.file_loader.standardize_num_format", "_autosummary/otters.wrangle.psychrometrics", "_autosummary/otters.wrangle.psychrometrics.CalcPsychrometricsFromRelHum", "_autosummary/otters.wrangle.psychrometrics.CalcPsychrometricsFromTDewPoint", "_autosummary/otters.wrangle.psychrometrics.CalcPsychrometricsFromTWetBulb", "_autosummary/otters.wrangle.psychrometrics.FREEZING_POINT_WATER_IP", "_autosummary/otters.wrangle.psychrometrics.FREEZING_POINT_WATER_SI", "_autosummary/otters.wrangle.psychrometrics.GetDegreeOfSaturation", "_autosummary/otters.wrangle.psychrometrics.GetDryAirDensity", "_autosummary/otters.wrangle.psychrometrics.GetDryAirEnthalpy", "_autosummary/otters.wrangle.psychrometrics.GetDryAirVolume", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromEnthalpyAndTDryBulb", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromRelHum", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromSpecificHum", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromTDewPoint", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromTWetBulb", "_autosummary/otters.wrangle.psychrometrics.GetHumRatioFromVapPres", "_autosummary/otters.wrangle.psychrometrics.GetMoistAirDensity", "_autosummary/otters.wrangle.psychrometrics.GetMoistAirEnthalpy", "_autosummary/otters.wrangle.psychrometrics.GetMoistAirVolume", "_autosummary/otters.wrangle.psychrometrics.GetRelHumFromHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetRelHumFromTDewPoint", "_autosummary/otters.wrangle.psychrometrics.GetRelHumFromTWetBulb", "_autosummary/otters.wrangle.psychrometrics.GetRelHumFromVapPres", "_autosummary/otters.wrangle.psychrometrics.GetSatAirEnthalpy", "_autosummary/otters.wrangle.psychrometrics.GetSatHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetSatVapPres", "_autosummary/otters.wrangle.psychrometrics.GetSeaLevelPressure", "_autosummary/otters.wrangle.psychrometrics.GetSpecificHumFromHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetStandardAtmPressure", "_autosummary/otters.wrangle.psychrometrics.GetStandardAtmTemperature", "_autosummary/otters.wrangle.psychrometrics.GetStationPressure", "_autosummary/otters.wrangle.psychrometrics.GetTCelsiusFromTKelvin", "_autosummary/otters.wrangle.psychrometrics.GetTDewPointFromHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetTDewPointFromRelHum", "_autosummary/otters.wrangle.psychrometrics.GetTDewPointFromTWetBulb", "_autosummary/otters.wrangle.psychrometrics.GetTDewPointFromVapPres", "_autosummary/otters.wrangle.psychrometrics.GetTDryBulbFromEnthalpyAndHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetTDryBulbFromMoistAirVolumeAndHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetTFahrenheitFromTRankine", "_autosummary/otters.wrangle.psychrometrics.GetTKelvinFromTCelsius", "_autosummary/otters.wrangle.psychrometrics.GetTRankineFromTFahrenheit", "_autosummary/otters.wrangle.psychrometrics.GetTWetBulbFromHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetTWetBulbFromRelHum", "_autosummary/otters.wrangle.psychrometrics.GetTWetBulbFromTDewPoint", "_autosummary/otters.wrangle.psychrometrics.GetUnitSystem", "_autosummary/otters.wrangle.psychrometrics.GetVapPresFromHumRatio", "_autosummary/otters.wrangle.psychrometrics.GetVapPresFromRelHum", "_autosummary/otters.wrangle.psychrometrics.GetVapPresFromTDewPoint", "_autosummary/otters.wrangle.psychrometrics.GetVaporPressureDeficit", "_autosummary/otters.wrangle.psychrometrics.MAX_ITER_COUNT", "_autosummary/otters.wrangle.psychrometrics.MIN_HUM_RATIO", "_autosummary/otters.wrangle.psychrometrics.R_DA_IP", "_autosummary/otters.wrangle.psychrometrics.R_DA_SI", "_autosummary/otters.wrangle.psychrometrics.SetUnitSystem", "_autosummary/otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_IP", "_autosummary/otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_SI", "_autosummary/otters.wrangle.psychrometrics.UnitSystem", "_autosummary/otters.wrangle.psychrometrics.ZERO_CELSIUS_AS_KELVIN", "_autosummary/otters.wrangle.psychrometrics.ZERO_FAHRENHEIT_AS_RANKINE", "_autosummary/otters.wrangle.psychrometrics.dLnPws_", "_autosummary/otters.wrangle.psychrometrics.isIP", "_autosummary/otters.wrangle.time_tools", "_autosummary/otters.wrangle.time_tools.getLastNWeeks", "_autosummary/otters.wrangle.time_tools.overlayPast", "_autosummary/otters.wrangle.time_tools.selectiveResample", "_autosummary/otters.wrangle.time_tools.str2dt", "_autosummary/otters.wrangle.time_tools.time2timedelta", "_autosummary/otters.wrangle.wrangler", "_autosummary/otters.wrangle.wrangler.compare_lists", "_autosummary/otters.wrangle.wrangler.find_strs", "_autosummary/otters.wrangle.wrangler.gapAndIsland", "_autosummary/otters.wrangle.wrangler.mergeCloseEvents", "_autosummary/otters.wrangle.wrangler.merge_df_cols", "_autosummary/otters.wrangle.wrangler.merge_dfs", "_autosummary/otters.wrangle.wrangler.two_letter_month_to_number", "important_functions", "index", "modules", "otters", "otters.drive", "otters.model", "otters.vis", "otters.wrangle"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["_autosummary\\otters.drive.ExPS.rst", "_autosummary\\otters.drive.ExPS.DowntimeEvent.rst", "_autosummary\\otters.drive.ExPS.DowntimeEvent.__init__.rst", "_autosummary\\otters.drive.ExPS.DowntimeEvent.setAvgNonProd.rst", "_autosummary\\otters.drive.ExPS.DowntimeEvent.setTargets.rst", "_autosummary\\otters.drive.ExPS.ExPS.rst", "_autosummary\\otters.drive.ExPS.ExPS.__init__.rst", "_autosummary\\otters.drive.ExPS.ExPS.createPPT.rst", "_autosummary\\otters.drive.ExPS.ExPS.getCSV.rst", "_autosummary\\otters.drive.ExPS.ExPS.getExcel.rst", "_autosummary\\otters.drive.ExPS.ExPS.getSQL.rst", "_autosummary\\otters.drive.ExPS.ExPS.savePPT.rst", "_autosummary\\otters.drive.ExPS.Graph.rst", "_autosummary\\otters.drive.ExPS.Graph.__init__.rst", "_autosummary\\otters.drive.ExPS.Graph.getNRowAvg.rst", "_autosummary\\otters.drive.ExPS.Graph.setAvgProd.rst", "_autosummary\\otters.drive.ExPS.Graph.setDf.rst", "_autosummary\\otters.drive.ExPS.Graph.setDowntimeEvents.rst", "_autosummary\\otters.drive.ExPS.Graph.setLowAchieved.rst", "_autosummary\\otters.drive.ExPS.Graph.setLowPercentage.rst", "_autosummary\\otters.drive.ExPS.Graph.show.rst", "_autosummary\\otters.drive.ExPS.Plot.rst", "_autosummary\\otters.drive.ExPS.Plot.__init__.rst", "_autosummary\\otters.drive.ExPS.Plot.addAreaLines.rst", "_autosummary\\otters.drive.ExPS.Plot.addAvgProdLine.rst", "_autosummary\\otters.drive.ExPS.Plot.addLegendLabels.rst", "_autosummary\\otters.drive.ExPS.Plot.addLines.rst", "_autosummary\\otters.drive.ExPS.Plot.addLowAchievedLine.rst", "_autosummary\\otters.drive.ExPS.Plot.addScatter.rst", "_autosummary\\otters.drive.ExPS.Plot.addWTAPSchedule.rst", "_autosummary\\otters.drive.ExPS.Plot.boundYAxis.rst", "_autosummary\\otters.drive.ExPS.Plot.createDTEventLabel.rst", "_autosummary\\otters.drive.ExPS.Plot.createPlot.rst", "_autosummary\\otters.drive.ExPS.Plot.createTimeline.rst", "_autosummary\\otters.drive.ExPS.Plot.formatXAxis.rst", "_autosummary\\otters.drive.ExPS.Plot.formatYAxis.rst", "_autosummary\\otters.drive.ExPS.Plot.formatYAxisUnits.rst", "_autosummary\\otters.drive.ExPS.Plot.full_setup.rst", "_autosummary\\otters.drive.ExPS.Plot.granulizeData.rst", "_autosummary\\otters.drive.ExPS.Plot.scaleDTick.rst", "_autosummary\\otters.drive.ExPS.Plot.setYAxisRange.rst", "_autosummary\\otters.drive.ExPS.Plot.show.rst", "_autosummary\\otters.drive.ExPS.Plot.showLastWeek.rst", "_autosummary\\otters.drive.ExPS.Plot.showLastYear.rst", "_autosummary\\otters.drive.ExPS.Plot.sparklines.rst", "_autosummary\\otters.drive.ExPS.Plot.timeFormatXAxis.rst", "_autosummary\\otters.drive.ppt_gen.rst", "_autosummary\\otters.drive.ppt_gen.PPTGen.rst", "_autosummary\\otters.drive.ppt_gen.PPTGen.ExPSStyleName.rst", "_autosummary\\otters.drive.ppt_gen.PPTGen.__init__.rst", "_autosummary\\otters.drive.ppt_gen.PPTGen.addSlide.rst", "_autosummary\\otters.drive.ppt_gen.PPTGen.savePPT.rst", "_autosummary\\otters.model.Regression.rst", "_autosummary\\otters.model.Regression.LinearRegression.rst", "_autosummary\\otters.model.Regression.LinearRegression.__init__.rst", "_autosummary\\otters.model.Regression.LinearRegression.fit.rst", "_autosummary\\otters.model.Regression.LinearRegression.get_metadata_routing.rst", "_autosummary\\otters.model.Regression.LinearRegression.get_params.rst", "_autosummary\\otters.model.Regression.LinearRegression.predict.rst", "_autosummary\\otters.model.Regression.LinearRegression.score.rst", "_autosummary\\otters.model.Regression.LinearRegression.set_fit_request.rst", "_autosummary\\otters.model.Regression.LinearRegression.set_params.rst", "_autosummary\\otters.model.Regression.LinearRegression.set_score_request.rst", "_autosummary\\otters.model.Regression.Model.rst", "_autosummary\\otters.model.Regression.Model.__init__.rst", "_autosummary\\otters.model.Regression.Models.rst", "_autosummary\\otters.model.Regression.Models.__init__.rst", "_autosummary\\otters.model.Regression.Models.regression.rst", "_autosummary\\otters.model.Regression.Models.tabulateModels.rst", "_autosummary\\otters.model.Regression.Regression.rst", "_autosummary\\otters.model.Regression.Regression.__init__.rst", "_autosummary\\otters.model.Regression.Regression.getCV.rst", "_autosummary\\otters.model.Regression.Regression.getCVRMSE.rst", "_autosummary\\otters.model.Regression.Regression.getR2.rst", "_autosummary\\otters.model.Regression.Regression.getRegEquation.rst", "_autosummary\\otters.model.Regression.Regression.model_component_graph.rst", "_autosummary\\otters.model.Regression.Regression.regress.rst", "_autosummary\\otters.model.Regression.Regression.stats.rst", "_autosummary\\otters.model.Regression.Regression.to_frame.rst", "_autosummary\\otters.model.VirtualMeter.rst", "_autosummary\\otters.model.VirtualMeter.AHU.rst", "_autosummary\\otters.model.VirtualMeter.AHU.__init__.rst", "_autosummary\\otters.model.VirtualMeter.VirtualMeter.rst", "_autosummary\\otters.model.VirtualMeter.VirtualMeter.__init__.rst", "_autosummary\\otters.model.VirtualMeter.VirtualMeter.cleanColNamesEMS.rst", "_autosummary\\otters.model.VirtualMeter.VirtualMeter.createAHU.rst", "_autosummary\\otters.model.VirtualMeter.VirtualMeter.splitEntities.rst", "_autosummary\\otters.vis.graph.rst", "_autosummary\\otters.vis.graph.Graph.rst", "_autosummary\\otters.vis.graph.Graph.__init__.rst", "_autosummary\\otters.vis.graph.Graph.show.rst", "_autosummary\\otters.vis.graph.Plot.rst", "_autosummary\\otters.vis.graph.Plot.__init__.rst", "_autosummary\\otters.vis.graph.Plot.addAreaLines.rst", "_autosummary\\otters.vis.graph.Plot.addLines.rst", "_autosummary\\otters.vis.graph.Plot.addScatter.rst", "_autosummary\\otters.vis.graph.Plot.boundYAxis.rst", "_autosummary\\otters.vis.graph.Plot.createPlot.rst", "_autosummary\\otters.vis.graph.Plot.createTimeline.rst", "_autosummary\\otters.vis.graph.Plot.formatXAxis.rst", "_autosummary\\otters.vis.graph.Plot.formatYAxis.rst", "_autosummary\\otters.vis.graph.Plot.full_setup.rst", "_autosummary\\otters.vis.graph.Plot.scaleDTick.rst", "_autosummary\\otters.vis.graph.Plot.setYAxisRange.rst", "_autosummary\\otters.vis.graph.Plot.show.rst", "_autosummary\\otters.vis.graph.Plot.sparklines.rst", "_autosummary\\otters.vis.graph.Plot.timeFormatXAxis.rst", "_autosummary\\otters.wrangle.db_loader.rst", "_autosummary\\otters.wrangle.db_loader.create_conn.rst", "_autosummary\\otters.wrangle.db_loader.create_db.rst", "_autosummary\\otters.wrangle.db_loader.dedupe.rst", "_autosummary\\otters.wrangle.db_loader.getNasaWeather.rst", "_autosummary\\otters.wrangle.db_loader.load.rst", "_autosummary\\otters.wrangle.db_loader.ts2str.rst", "_autosummary\\otters.wrangle.db_loader.upsert.rst", "_autosummary\\otters.wrangle.file_loader.rst", "_autosummary\\otters.wrangle.file_loader.formatData.rst", "_autosummary\\otters.wrangle.file_loader.getCSVDFs.rst", "_autosummary\\otters.wrangle.file_loader.getExcelDFs.rst", "_autosummary\\otters.wrangle.file_loader.getFiles.rst", "_autosummary\\otters.wrangle.file_loader.get_table_gaz.rst", "_autosummary\\otters.wrangle.file_loader.get_table_tarif_M.rst", "_autosummary\\otters.wrangle.file_loader.import_config.rst", "_autosummary\\otters.wrangle.file_loader.replace_backslashes_in_dict.rst", "_autosummary\\otters.wrangle.file_loader.save2xl.rst", "_autosummary\\otters.wrangle.file_loader.standardize_num_format.rst", "_autosummary\\otters.wrangle.psychrometrics.rst", "_autosummary\\otters.wrangle.psychrometrics.CalcPsychrometricsFromRelHum.rst", "_autosummary\\otters.wrangle.psychrometrics.CalcPsychrometricsFromTDewPoint.rst", "_autosummary\\otters.wrangle.psychrometrics.CalcPsychrometricsFromTWetBulb.rst", "_autosummary\\otters.wrangle.psychrometrics.FREEZING_POINT_WATER_IP.rst", "_autosummary\\otters.wrangle.psychrometrics.FREEZING_POINT_WATER_SI.rst", "_autosummary\\otters.wrangle.psychrometrics.GetDegreeOfSaturation.rst", "_autosummary\\otters.wrangle.psychrometrics.GetDryAirDensity.rst", "_autosummary\\otters.wrangle.psychrometrics.GetDryAirEnthalpy.rst", "_autosummary\\otters.wrangle.psychrometrics.GetDryAirVolume.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromEnthalpyAndTDryBulb.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromRelHum.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromSpecificHum.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromTDewPoint.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromTWetBulb.rst", "_autosummary\\otters.wrangle.psychrometrics.GetHumRatioFromVapPres.rst", "_autosummary\\otters.wrangle.psychrometrics.GetMoistAirDensity.rst", "_autosummary\\otters.wrangle.psychrometrics.GetMoistAirEnthalpy.rst", "_autosummary\\otters.wrangle.psychrometrics.GetMoistAirVolume.rst", "_autosummary\\otters.wrangle.psychrometrics.GetRelHumFromHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetRelHumFromTDewPoint.rst", "_autosummary\\otters.wrangle.psychrometrics.GetRelHumFromTWetBulb.rst", "_autosummary\\otters.wrangle.psychrometrics.GetRelHumFromVapPres.rst", "_autosummary\\otters.wrangle.psychrometrics.GetSatAirEnthalpy.rst", "_autosummary\\otters.wrangle.psychrometrics.GetSatHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetSatVapPres.rst", "_autosummary\\otters.wrangle.psychrometrics.GetSeaLevelPressure.rst", "_autosummary\\otters.wrangle.psychrometrics.GetSpecificHumFromHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetStandardAtmPressure.rst", "_autosummary\\otters.wrangle.psychrometrics.GetStandardAtmTemperature.rst", "_autosummary\\otters.wrangle.psychrometrics.GetStationPressure.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTCelsiusFromTKelvin.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDewPointFromHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDewPointFromRelHum.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDewPointFromTWetBulb.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDewPointFromVapPres.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDryBulbFromEnthalpyAndHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTDryBulbFromMoistAirVolumeAndHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTFahrenheitFromTRankine.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTKelvinFromTCelsius.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTRankineFromTFahrenheit.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTWetBulbFromHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTWetBulbFromRelHum.rst", "_autosummary\\otters.wrangle.psychrometrics.GetTWetBulbFromTDewPoint.rst", "_autosummary\\otters.wrangle.psychrometrics.GetUnitSystem.rst", "_autosummary\\otters.wrangle.psychrometrics.GetVapPresFromHumRatio.rst", "_autosummary\\otters.wrangle.psychrometrics.GetVapPresFromRelHum.rst", "_autosummary\\otters.wrangle.psychrometrics.GetVapPresFromTDewPoint.rst", "_autosummary\\otters.wrangle.psychrometrics.GetVaporPressureDeficit.rst", "_autosummary\\otters.wrangle.psychrometrics.MAX_ITER_COUNT.rst", "_autosummary\\otters.wrangle.psychrometrics.MIN_HUM_RATIO.rst", "_autosummary\\otters.wrangle.psychrometrics.R_DA_IP.rst", "_autosummary\\otters.wrangle.psychrometrics.R_DA_SI.rst", "_autosummary\\otters.wrangle.psychrometrics.SetUnitSystem.rst", "_autosummary\\otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_IP.rst", "_autosummary\\otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_SI.rst", "_autosummary\\otters.wrangle.psychrometrics.UnitSystem.rst", "_autosummary\\otters.wrangle.psychrometrics.ZERO_CELSIUS_AS_KELVIN.rst", "_autosummary\\otters.wrangle.psychrometrics.ZERO_FAHRENHEIT_AS_RANKINE.rst", "_autosummary\\otters.wrangle.psychrometrics.dLnPws_.rst", "_autosummary\\otters.wrangle.psychrometrics.isIP.rst", "_autosummary\\otters.wrangle.time_tools.rst", "_autosummary\\otters.wrangle.time_tools.getLastNWeeks.rst", "_autosummary\\otters.wrangle.time_tools.overlayPast.rst", "_autosummary\\otters.wrangle.time_tools.selectiveResample.rst", "_autosummary\\otters.wrangle.time_tools.str2dt.rst", "_autosummary\\otters.wrangle.time_tools.time2timedelta.rst", "_autosummary\\otters.wrangle.wrangler.rst", "_autosummary\\otters.wrangle.wrangler.compare_lists.rst", "_autosummary\\otters.wrangle.wrangler.find_strs.rst", "_autosummary\\otters.wrangle.wrangler.gapAndIsland.rst", "_autosummary\\otters.wrangle.wrangler.mergeCloseEvents.rst", "_autosummary\\otters.wrangle.wrangler.merge_df_cols.rst", "_autosummary\\otters.wrangle.wrangler.merge_dfs.rst", "_autosummary\\otters.wrangle.wrangler.two_letter_month_to_number.rst", "important_functions.rst", "index.rst", "modules.rst", "otters.rst", "otters.drive.rst", "otters.model.rst", "otters.vis.rst", "otters.wrangle.rst"], "indexentries": {"__init__() (otters.drive.exps.downtimeevent method)": [[2, "otters.drive.ExPS.DowntimeEvent.__init__", false]], "__init__() (otters.drive.exps.exps method)": [[6, "otters.drive.ExPS.ExPS.__init__", false]], "__init__() (otters.drive.exps.graph method)": [[13, "otters.drive.ExPS.Graph.__init__", false]], "__init__() (otters.drive.exps.plot method)": [[22, "otters.drive.ExPS.Plot.__init__", false]], "__init__() (otters.drive.ppt_gen.pptgen method)": [[49, "otters.drive.ppt_gen.PPTGen.__init__", false]], "__init__() (otters.model.regression.linearregression method)": [[54, "otters.model.Regression.LinearRegression.__init__", false]], "__init__() (otters.model.regression.model method)": [[64, "otters.model.Regression.Model.__init__", false]], "__init__() (otters.model.regression.models method)": [[66, "otters.model.Regression.Models.__init__", false]], "__init__() (otters.model.regression.regression method)": [[70, "otters.model.Regression.Regression.__init__", false]], "__init__() (otters.model.virtualmeter.ahu method)": [[81, "otters.model.VirtualMeter.AHU.__init__", false]], "__init__() (otters.model.virtualmeter.virtualmeter method)": [[83, "otters.model.VirtualMeter.VirtualMeter.__init__", false]], "__init__() (otters.vis.graph.graph method)": [[89, "otters.vis.graph.Graph.__init__", false]], "__init__() (otters.vis.graph.plot method)": [[92, "otters.vis.graph.Plot.__init__", false]], "addarealines() (otters.drive.exps.plot method)": [[23, "otters.drive.ExPS.Plot.addAreaLines", false]], "addarealines() (otters.vis.graph.plot method)": [[93, "otters.vis.graph.Plot.addAreaLines", false]], "addavgprodline() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.addAvgProdLine", false], [24, "otters.drive.ExPS.Plot.addAvgProdLine", false]], "addlegendlabels() (otters.drive.exps.plot method)": [[25, "otters.drive.ExPS.Plot.addLegendLabels", false]], "addlines() (otters.drive.exps.plot method)": [[26, "otters.drive.ExPS.Plot.addLines", false]], "addlines() (otters.vis.graph.plot method)": [[94, "otters.vis.graph.Plot.addLines", false]], "addlowachievedline() (otters.drive.exps.plot method)": [[27, "otters.drive.ExPS.Plot.addLowAchievedLine", false]], "addscatter() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.addScatter", false], [28, "otters.drive.ExPS.Plot.addScatter", false]], "addscatter() (otters.vis.graph.plot method)": [[91, "otters.vis.graph.Plot.addScatter", false], [95, "otters.vis.graph.Plot.addScatter", false]], "addslide() (otters.drive.ppt_gen.pptgen method)": [[50, "otters.drive.ppt_gen.PPTGen.addSlide", false]], "addwtapschedule() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.addWTAPSchedule", false], [29, "otters.drive.ExPS.Plot.addWTAPSchedule", false]], "ahu (class in otters.model.virtualmeter)": [[80, "otters.model.VirtualMeter.AHU", false]], "boundyaxis() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.boundYAxis", false], [30, "otters.drive.ExPS.Plot.boundYAxis", false]], "boundyaxis() (otters.vis.graph.plot method)": [[91, "otters.vis.graph.Plot.boundYAxis", false], [96, "otters.vis.graph.Plot.boundYAxis", false]], "calcpsychrometricsfromrelhum() (in module otters.wrangle.psychrometrics)": [[127, "otters.wrangle.psychrometrics.CalcPsychrometricsFromRelHum", false]], "calcpsychrometricsfromtdewpoint() (in module otters.wrangle.psychrometrics)": [[128, "otters.wrangle.psychrometrics.CalcPsychrometricsFromTDewPoint", false]], "calcpsychrometricsfromtwetbulb() (in module otters.wrangle.psychrometrics)": [[129, "otters.wrangle.psychrometrics.CalcPsychrometricsFromTWetBulb", false]], "cleancolnamesems() (otters.model.virtualmeter.virtualmeter method)": [[84, "otters.model.VirtualMeter.VirtualMeter.cleanColNamesEMS", false]], "compare_lists() (in module otters.wrangle.wrangler)": [[194, "otters.wrangle.wrangler.compare_lists", false]], "create_conn() (in module otters.wrangle.db_loader)": [[108, "otters.wrangle.db_loader.create_conn", false]], "create_db() (in module otters.wrangle.db_loader)": [[109, "otters.wrangle.db_loader.create_db", false]], "createahu() (otters.model.virtualmeter.virtualmeter method)": [[85, "otters.model.VirtualMeter.VirtualMeter.createAHU", false]], "createdteventlabel() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.createDTEventLabel", false], [31, "otters.drive.ExPS.Plot.createDTEventLabel", false]], "createplot() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.createPlot", false], [32, "otters.drive.ExPS.Plot.createPlot", false]], "createplot() (otters.vis.graph.plot method)": [[91, "otters.vis.graph.Plot.createPlot", false], [97, "otters.vis.graph.Plot.createPlot", false]], "createppt() (otters.drive.exps.exps method)": [[5, "otters.drive.ExPS.ExPS.createPPT", false], [7, "otters.drive.ExPS.ExPS.createPPT", false]], "createtimeline() (otters.drive.exps.plot method)": [[21, "otters.drive.ExPS.Plot.createTimeline", false], [33, "otters.drive.ExPS.Plot.createTimeline", false]], "createtimeline() (otters.vis.graph.plot method)": [[91, "otters.vis.graph.Plot.createTimeline", false], [98, "otters.vis.graph.Plot.createTimeline", false]], "dedupe() (in module otters.wrangle.db_loader)": [[110, "otters.wrangle.db_loader.dedupe", false]], "dlnpws_() (in module otters.wrangle.psychrometrics)": [[185, "otters.wrangle.psychrometrics.dLnPws_", false]], "downtimeevent (class in otters.drive.exps)": [[1, "otters.drive.ExPS.DowntimeEvent", false]], "exps (class in otters.drive.exps)": [[5, "otters.drive.ExPS.ExPS", false]], "expsstylename() (otters.drive.ppt_gen.pptgen method)": [[48, "otters.drive.ppt_gen.PPTGen.ExPSStyleName", false]], "find_strs() (in module otters.wrangle.wrangler)": [[195, "otters.wrangle.wrangler.find_strs", false]], "fit() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.fit", false], [55, "otters.model.Regression.LinearRegression.fit", false]], "formatdata() (in module otters)": [[201, "otters.formatData", false]], "formatdata() (in module otters.wrangle.file_loader)": [[116, "otters.wrangle.file_loader.formatData", false]], "formatxaxis() (otters.drive.exps.plot method)": [[34, "otters.drive.ExPS.Plot.formatXAxis", false]], "formatxaxis() (otters.vis.graph.plot method)": [[99, "otters.vis.graph.Plot.formatXAxis", false]], "formatyaxis() (otters.drive.exps.plot method)": [[35, "otters.drive.ExPS.Plot.formatYAxis", false]], "formatyaxis() (otters.vis.graph.plot method)": [[100, "otters.vis.graph.Plot.formatYAxis", false]], "formatyaxisunits() (otters.drive.exps.plot method)": [[36, "otters.drive.ExPS.Plot.formatYAxisUnits", false]], "freezing_point_water_ip (in module otters.wrangle.psychrometrics)": [[130, "otters.wrangle.psychrometrics.FREEZING_POINT_WATER_IP", false]], "freezing_point_water_si (in module otters.wrangle.psychrometrics)": [[131, "otters.wrangle.psychrometrics.FREEZING_POINT_WATER_SI", false]], "full_setup() (otters.drive.exps.plot method)": [[37, "otters.drive.ExPS.Plot.full_setup", false]], "full_setup() (otters.vis.graph.plot method)": [[101, "otters.vis.graph.Plot.full_setup", false]], "gapandisland() (in module otters.wrangle.wrangler)": [[196, "otters.wrangle.wrangler.gapAndIsland", false]], "get_metadata_routing() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.get_metadata_routing", false], [56, "otters.model.Regression.LinearRegression.get_metadata_routing", false]], "get_params() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.get_params", false], [57, "otters.model.Regression.LinearRegression.get_params", false]], "get_table_gaz() (in module otters.wrangle.file_loader)": [[120, "otters.wrangle.file_loader.get_table_gaz", false]], "get_table_tarif_m() (in module otters.wrangle.file_loader)": [[121, "otters.wrangle.file_loader.get_table_tarif_M", false]], "getcv() (otters.model.regression.regression method)": [[71, "otters.model.Regression.Regression.getCV", false]], "getcvrmse() (otters.model.regression.regression method)": [[69, "otters.model.Regression.Regression.getCVRMSE", false], [72, "otters.model.Regression.Regression.getCVRMSE", false]], "getdegreeofsaturation() (in module otters.wrangle.psychrometrics)": [[132, "otters.wrangle.psychrometrics.GetDegreeOfSaturation", false]], "getdryairdensity() (in module otters.wrangle.psychrometrics)": [[133, "otters.wrangle.psychrometrics.GetDryAirDensity", false]], "getdryairenthalpy() (in module otters.wrangle.psychrometrics)": [[134, "otters.wrangle.psychrometrics.GetDryAirEnthalpy", false]], "getdryairvolume() (in module otters.wrangle.psychrometrics)": [[135, "otters.wrangle.psychrometrics.GetDryAirVolume", false]], "getexcel() (otters.drive.exps.exps method)": [[9, "otters.drive.ExPS.ExPS.getExcel", false]], "getexceldfs() (in module otters.wrangle.file_loader)": [[118, "otters.wrangle.file_loader.getExcelDFs", false]], "getfiles() (in module otters.wrangle.file_loader)": [[119, "otters.wrangle.file_loader.getFiles", false]], "gethumratiofromenthalpyandtdrybulb() (in module otters.wrangle.psychrometrics)": [[136, "otters.wrangle.psychrometrics.GetHumRatioFromEnthalpyAndTDryBulb", false]], "gethumratiofromrelhum() (in module otters.wrangle.psychrometrics)": [[137, "otters.wrangle.psychrometrics.GetHumRatioFromRelHum", false]], "gethumratiofromspecifichum() (in module otters.wrangle.psychrometrics)": [[138, "otters.wrangle.psychrometrics.GetHumRatioFromSpecificHum", false]], "gethumratiofromtdewpoint() (in module otters.wrangle.psychrometrics)": [[139, "otters.wrangle.psychrometrics.GetHumRatioFromTDewPoint", false]], "gethumratiofromtwetbulb() (in module otters.wrangle.psychrometrics)": [[140, "otters.wrangle.psychrometrics.GetHumRatioFromTWetBulb", false]], "gethumratiofromvappres() (in module otters.wrangle.psychrometrics)": [[141, "otters.wrangle.psychrometrics.GetHumRatioFromVapPres", false]], "getlastnweeks() (in module otters.wrangle.time_tools)": [[188, "otters.wrangle.time_tools.getLastNWeeks", false]], "getmoistairdensity() (in module otters.wrangle.psychrometrics)": [[142, "otters.wrangle.psychrometrics.GetMoistAirDensity", false]], "getmoistairenthalpy() (in module otters.wrangle.psychrometrics)": [[143, "otters.wrangle.psychrometrics.GetMoistAirEnthalpy", false]], "getmoistairvolume() (in module otters.wrangle.psychrometrics)": [[144, "otters.wrangle.psychrometrics.GetMoistAirVolume", false]], "getnasaweather() (in module otters.wrangle.db_loader)": [[111, "otters.wrangle.db_loader.getNasaWeather", false]], "getnrowavg() (otters.drive.exps.graph method)": [[14, "otters.drive.ExPS.Graph.getNRowAvg", false]], "getr2() (otters.model.regression.regression method)": [[73, "otters.model.Regression.Regression.getR2", false]], "getregequation() (otters.model.regression.regression method)": [[74, "otters.model.Regression.Regression.getRegEquation", false]], "getrelhumfromhumratio() (in module otters.wrangle.psychrometrics)": [[145, "otters.wrangle.psychrometrics.GetRelHumFromHumRatio", false]], "getrelhumfromtdewpoint() (in module otters.wrangle.psychrometrics)": [[146, "otters.wrangle.psychrometrics.GetRelHumFromTDewPoint", false]], "getrelhumfromtwetbulb() (in module otters.wrangle.psychrometrics)": [[147, "otters.wrangle.psychrometrics.GetRelHumFromTWetBulb", false]], "getrelhumfromvappres() (in module otters.wrangle.psychrometrics)": [[148, "otters.wrangle.psychrometrics.GetRelHumFromVapPres", false]], "getsatairenthalpy() (in module otters.wrangle.psychrometrics)": [[149, "otters.wrangle.psychrometrics.GetSatAirEnthalpy", false]], "getsathumratio() (in module otters.wrangle.psychrometrics)": [[150, "otters.wrangle.psychrometrics.GetSatHumRatio", false]], "getsatvappres() (in module otters.wrangle.psychrometrics)": [[151, "otters.wrangle.psychrometrics.GetSatVapPres", false]], "getsealevelpressure() (in module otters.wrangle.psychrometrics)": [[152, "otters.wrangle.psychrometrics.GetSeaLevelPressure", false]], "getspecifichumfromhumratio() (in module otters.wrangle.psychrometrics)": [[153, "otters.wrangle.psychrometrics.GetSpecificHumFromHumRatio", false]], "getsql() (otters.drive.exps.exps method)": [[5, "otters.drive.ExPS.ExPS.getSQL", false], [10, "otters.drive.ExPS.ExPS.getSQL", false]], "getstandardatmpressure() (in module otters.wrangle.psychrometrics)": [[154, "otters.wrangle.psychrometrics.GetStandardAtmPressure", false]], "getstandardatmtemperature() (in module otters.wrangle.psychrometrics)": [[155, "otters.wrangle.psychrometrics.GetStandardAtmTemperature", false]], "getstationpressure() (in module otters.wrangle.psychrometrics)": [[156, "otters.wrangle.psychrometrics.GetStationPressure", false]], "gettcelsiusfromtkelvin() (in module otters.wrangle.psychrometrics)": [[157, "otters.wrangle.psychrometrics.GetTCelsiusFromTKelvin", false]], "gettdewpointfromhumratio() (in module otters.wrangle.psychrometrics)": [[158, "otters.wrangle.psychrometrics.GetTDewPointFromHumRatio", false]], "gettdewpointfromrelhum() (in module otters.wrangle.psychrometrics)": [[159, "otters.wrangle.psychrometrics.GetTDewPointFromRelHum", false]], "gettdewpointfromtwetbulb() (in module otters.wrangle.psychrometrics)": [[160, "otters.wrangle.psychrometrics.GetTDewPointFromTWetBulb", false]], "gettdewpointfromvappres() (in module otters.wrangle.psychrometrics)": [[161, "otters.wrangle.psychrometrics.GetTDewPointFromVapPres", false]], "gettdrybulbfromenthalpyandhumratio() (in module otters.wrangle.psychrometrics)": [[162, "otters.wrangle.psychrometrics.GetTDryBulbFromEnthalpyAndHumRatio", false]], "gettdrybulbfrommoistairvolumeandhumratio() (in module otters.wrangle.psychrometrics)": [[163, "otters.wrangle.psychrometrics.GetTDryBulbFromMoistAirVolumeAndHumRatio", false]], "gettfahrenheitfromtrankine() (in module otters.wrangle.psychrometrics)": [[164, "otters.wrangle.psychrometrics.GetTFahrenheitFromTRankine", false]], "gettkelvinfromtcelsius() (in module otters.wrangle.psychrometrics)": [[165, "otters.wrangle.psychrometrics.GetTKelvinFromTCelsius", false]], "gettrankinefromtfahrenheit() (in module otters.wrangle.psychrometrics)": [[166, "otters.wrangle.psychrometrics.GetTRankineFromTFahrenheit", false]], "gettwetbulbfromhumratio() (in module otters.wrangle.psychrometrics)": [[167, "otters.wrangle.psychrometrics.GetTWetBulbFromHumRatio", false]], "gettwetbulbfromrelhum() (in module otters.wrangle.psychrometrics)": [[168, "otters.wrangle.psychrometrics.GetTWetBulbFromRelHum", false]], "gettwetbulbfromtdewpoint() (in module otters.wrangle.psychrometrics)": [[169, "otters.wrangle.psychrometrics.GetTWetBulbFromTDewPoint", false]], "getunitsystem() (in module otters.wrangle.psychrometrics)": [[170, "otters.wrangle.psychrometrics.GetUnitSystem", false]], "getvaporpressuredeficit() (in module otters.wrangle.psychrometrics)": [[174, "otters.wrangle.psychrometrics.GetVaporPressureDeficit", false]], "getvappresfromhumratio() (in module otters.wrangle.psychrometrics)": [[171, "otters.wrangle.psychrometrics.GetVapPresFromHumRatio", false]], "getvappresfromrelhum() (in module otters.wrangle.psychrometrics)": [[172, "otters.wrangle.psychrometrics.GetVapPresFromRelHum", false]], "getvappresfromtdewpoint() (in module otters.wrangle.psychrometrics)": [[173, "otters.wrangle.psychrometrics.GetVapPresFromTDewPoint", false]], "granulizedata() (otters.drive.exps.plot method)": [[38, "otters.drive.ExPS.Plot.granulizeData", false]], "graph (class in otters.drive.exps)": [[12, "otters.drive.ExPS.Graph", false]], "graph (class in otters.vis.graph)": [[88, "otters.vis.graph.Graph", false]], "import_config() (in module otters)": [[201, "otters.import_config", false]], "import_config() (in module otters.wrangle.file_loader)": [[122, "otters.wrangle.file_loader.import_config", false]], "isip() (in module otters.wrangle.psychrometrics)": [[186, "otters.wrangle.psychrometrics.isIP", false]], "linearregression (class in otters.model.regression)": [[53, "otters.model.Regression.LinearRegression", false]], "load() (in module otters.wrangle.db_loader)": [[112, "otters.wrangle.db_loader.load", false]], "max_iter_count (in module otters.wrangle.psychrometrics)": [[175, "otters.wrangle.psychrometrics.MAX_ITER_COUNT", false]], "merge_df_cols() (in module otters.wrangle.wrangler)": [[198, "otters.wrangle.wrangler.merge_df_cols", false]], "merge_dfs() (in module otters.wrangle.wrangler)": [[199, "otters.wrangle.wrangler.merge_dfs", false]], "mergecloseevents() (in module otters.wrangle.wrangler)": [[197, "otters.wrangle.wrangler.mergeCloseEvents", false]], "min_hum_ratio (in module otters.wrangle.psychrometrics)": [[176, "otters.wrangle.psychrometrics.MIN_HUM_RATIO", false]], "model (class in otters.model.regression)": [[63, "otters.model.Regression.Model", false]], "model_component_graph() (otters.model.regression.regression method)": [[75, "otters.model.Regression.Regression.model_component_graph", false]], "models (class in otters.model.regression)": [[65, "otters.model.Regression.Models", false]], "module": [[0, "module-otters.drive.ExPS", false], [46, "module-otters.drive.ppt_gen", false], [52, "module-otters.model.Regression", false], [79, "module-otters.model.VirtualMeter", false], [87, "module-otters.vis.graph", false], [107, "module-otters.wrangle.db_loader", false], [115, "module-otters.wrangle.file_loader", false], [126, "module-otters.wrangle.psychrometrics", false], [187, "module-otters.wrangle.time_tools", false], [193, "module-otters.wrangle.wrangler", false], [201, "module-otters", false]], "otters": [[201, "module-otters", false]], "otters.drive.exps": [[0, "module-otters.drive.ExPS", false]], "otters.drive.ppt_gen": [[46, "module-otters.drive.ppt_gen", false]], "otters.model.regression": [[52, "module-otters.model.Regression", false]], "otters.model.virtualmeter": [[79, "module-otters.model.VirtualMeter", false]], "otters.vis.graph": [[87, "module-otters.vis.graph", false]], "otters.wrangle.db_loader": [[107, "module-otters.wrangle.db_loader", false]], "otters.wrangle.file_loader": [[115, "module-otters.wrangle.file_loader", false]], "otters.wrangle.psychrometrics": [[126, "module-otters.wrangle.psychrometrics", false]], "otters.wrangle.time_tools": [[187, "module-otters.wrangle.time_tools", false]], "otters.wrangle.wrangler": [[193, "module-otters.wrangle.wrangler", false]], "overlaypast() (in module otters.wrangle.time_tools)": [[189, "otters.wrangle.time_tools.overlayPast", false]], "plot (class in otters.drive.exps)": [[21, "otters.drive.ExPS.Plot", false]], "plot (class in otters.vis.graph)": [[91, "otters.vis.graph.Plot", false]], "pptgen (class in otters.drive.ppt_gen)": [[47, "otters.drive.ppt_gen.PPTGen", false]], "predict() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.predict", false], [58, "otters.model.Regression.LinearRegression.predict", false]], "r_da_ip (in module otters.wrangle.psychrometrics)": [[177, "otters.wrangle.psychrometrics.R_DA_IP", false]], "r_da_si (in module otters.wrangle.psychrometrics)": [[178, "otters.wrangle.psychrometrics.R_DA_SI", false]], "regress() (otters.model.regression.regression method)": [[76, "otters.model.Regression.Regression.regress", false]], "regression (class in otters.model.regression)": [[69, "otters.model.Regression.Regression", false]], "regression() (otters.model.regression.models method)": [[67, "otters.model.Regression.Models.regression", false]], "replace_backslashes_in_dict() (in module otters.wrangle.file_loader)": [[123, "otters.wrangle.file_loader.replace_backslashes_in_dict", false]], "save2xl() (in module otters.wrangle.file_loader)": [[124, "otters.wrangle.file_loader.save2xl", false]], "saveppt() (otters.drive.exps.exps method)": [[11, "otters.drive.ExPS.ExPS.savePPT", false]], "saveppt() (otters.drive.ppt_gen.pptgen method)": [[51, "otters.drive.ppt_gen.PPTGen.savePPT", false]], "scaledtick() (otters.drive.exps.plot method)": [[39, "otters.drive.ExPS.Plot.scaleDTick", false]], "scaledtick() (otters.vis.graph.plot method)": [[102, "otters.vis.graph.Plot.scaleDTick", false]], "score() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.score", false], [59, "otters.model.Regression.LinearRegression.score", false]], "selectiveresample() (in module otters.wrangle.time_tools)": [[190, "otters.wrangle.time_tools.selectiveResample", false]], "set_fit_request() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.set_fit_request", false], [60, "otters.model.Regression.LinearRegression.set_fit_request", false]], "set_params() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.set_params", false], [61, "otters.model.Regression.LinearRegression.set_params", false]], "set_score_request() (otters.model.regression.linearregression method)": [[53, "otters.model.Regression.LinearRegression.set_score_request", false], [62, "otters.model.Regression.LinearRegression.set_score_request", false]], "setavgnonprod() (otters.drive.exps.downtimeevent method)": [[3, "otters.drive.ExPS.DowntimeEvent.setAvgNonProd", false]], "setavgprod() (otters.drive.exps.graph method)": [[15, "otters.drive.ExPS.Graph.setAvgProd", false]], "setdf() (otters.drive.exps.graph method)": [[16, "otters.drive.ExPS.Graph.setDf", false]], "setdowntimeevents() (otters.drive.exps.graph method)": [[17, "otters.drive.ExPS.Graph.setDowntimeEvents", false]], "setlowachieved() (otters.drive.exps.graph method)": [[12, "otters.drive.ExPS.Graph.setLowAchieved", false], [18, "otters.drive.ExPS.Graph.setLowAchieved", false]], "setlowpercentage() (otters.drive.exps.graph method)": [[12, "otters.drive.ExPS.Graph.setLowPercentage", false], [19, "otters.drive.ExPS.Graph.setLowPercentage", false]], "settargets() (otters.drive.exps.downtimeevent method)": [[4, "otters.drive.ExPS.DowntimeEvent.setTargets", false]], "setunitsystem() (in module otters.wrangle.psychrometrics)": [[179, "otters.wrangle.psychrometrics.SetUnitSystem", false]], "setyaxisrange() (otters.drive.exps.plot method)": [[40, "otters.drive.ExPS.Plot.setYAxisRange", false]], "setyaxisrange() (otters.vis.graph.plot method)": [[103, "otters.vis.graph.Plot.setYAxisRange", false]], "show() (otters.drive.exps.graph method)": [[20, "otters.drive.ExPS.Graph.show", false]], "show() (otters.drive.exps.plot method)": [[41, "otters.drive.ExPS.Plot.show", false]], "show() (otters.vis.graph.graph method)": [[90, "otters.vis.graph.Graph.show", false]], "show() (otters.vis.graph.plot method)": [[104, "otters.vis.graph.Plot.show", false]], "showlastweek() (otters.drive.exps.plot method)": [[42, "otters.drive.ExPS.Plot.showLastWeek", false]], "showlastyear() (otters.drive.exps.plot method)": [[43, "otters.drive.ExPS.Plot.showLastYear", false]], "sparklines() (otters.drive.exps.plot method)": [[44, "otters.drive.ExPS.Plot.sparklines", false]], "sparklines() (otters.vis.graph.plot method)": [[105, "otters.vis.graph.Plot.sparklines", false]], "splitentities() (otters.model.virtualmeter.virtualmeter method)": [[82, "otters.model.VirtualMeter.VirtualMeter.splitEntities", false], [86, "otters.model.VirtualMeter.VirtualMeter.splitEntities", false]], "standardize_num_format() (in module otters.wrangle.file_loader)": [[125, "otters.wrangle.file_loader.standardize_num_format", false]], "stats() (otters.model.regression.regression method)": [[77, "otters.model.Regression.Regression.stats", false]], "str2dt() (in module otters)": [[201, "otters.str2dt", false]], "str2dt() (in module otters.wrangle.time_tools)": [[191, "otters.wrangle.time_tools.str2dt", false]], "tabulatemodels() (otters.model.regression.models method)": [[68, "otters.model.Regression.Models.tabulateModels", false]], "time2timedelta() (in module otters.wrangle.time_tools)": [[192, "otters.wrangle.time_tools.time2timedelta", false]], "timeformatxaxis() (otters.drive.exps.plot method)": [[45, "otters.drive.ExPS.Plot.timeFormatXAxis", false]], "timeformatxaxis() (otters.vis.graph.plot method)": [[106, "otters.vis.graph.Plot.timeFormatXAxis", false]], "to_frame() (otters.model.regression.regression method)": [[78, "otters.model.Regression.Regression.to_frame", false]], "triple_point_water_ip (in module otters.wrangle.psychrometrics)": [[180, "otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_IP", false]], "triple_point_water_si (in module otters.wrangle.psychrometrics)": [[181, "otters.wrangle.psychrometrics.TRIPLE_POINT_WATER_SI", false]], "ts2str() (in module otters.wrangle.db_loader)": [[113, "otters.wrangle.db_loader.ts2str", false]], "two_letter_month_to_number() (in module otters.wrangle.wrangler)": [[200, "otters.wrangle.wrangler.two_letter_month_to_number", false]], "unitsystem (class in otters.wrangle.psychrometrics)": [[182, "otters.wrangle.psychrometrics.UnitSystem", false]], "upsert() (in module otters.wrangle.db_loader)": [[114, "otters.wrangle.db_loader.upsert", false]], "virtualmeter (class in otters.model.virtualmeter)": [[82, "otters.model.VirtualMeter.VirtualMeter", false]], "zero_celsius_as_kelvin (in module otters.wrangle.psychrometrics)": [[183, "otters.wrangle.psychrometrics.ZERO_CELSIUS_AS_KELVIN", false]], "zero_fahrenheit_as_rankine (in module otters.wrangle.psychrometrics)": [[184, "otters.wrangle.psychrometrics.ZERO_FAHRENHEIT_AS_RANKINE", false]]}, "objects": {"": [[201, 0, 0, "-", "otters"]], "otters": [[201, 3, 1, "", "formatData"], [201, 3, 1, "", "import_config"], [201, 3, 1, "", "str2dt"]], "otters.drive": [[0, 0, 0, "-", "ExPS"], [46, 0, 0, "-", "ppt_gen"]], "otters.drive.ExPS": [[1, 1, 1, "", "DowntimeEvent"], [5, 1, 1, "", "ExPS"], [12, 1, 1, "", "Graph"], [21, 1, 1, "", "Plot"]], "otters.drive.ExPS.DowntimeEvent": [[2, 2, 1, "", "__init__"], [3, 2, 1, "", "setAvgNonProd"], [4, 2, 1, "", "setTargets"]], "otters.drive.ExPS.ExPS": [[6, 2, 1, "", "__init__"], [7, 2, 1, "", "createPPT"], [9, 2, 1, "", "getExcel"], [10, 2, 1, "", "getSQL"], [11, 2, 1, "", "savePPT"]], "otters.drive.ExPS.Graph": [[13, 2, 1, "", "__init__"], [14, 2, 1, "", "getNRowAvg"], [15, 2, 1, "", "setAvgProd"], [16, 2, 1, "", "setDf"], [17, 2, 1, "", "setDowntimeEvents"], [18, 2, 1, "", "setLowAchieved"], [19, 2, 1, "", "setLowPercentage"], [20, 2, 1, "", "show"]], "otters.drive.ExPS.Plot": [[22, 2, 1, "", "__init__"], [23, 2, 1, "", "addAreaLines"], [24, 2, 1, "", "addAvgProdLine"], [25, 2, 1, "", "addLegendLabels"], [26, 2, 1, "", "addLines"], [27, 2, 1, "", "addLowAchievedLine"], [28, 2, 1, "", "addScatter"], [29, 2, 1, "", "addWTAPSchedule"], [30, 2, 1, "", "boundYAxis"], [31, 2, 1, "", "createDTEventLabel"], [32, 2, 1, "", "createPlot"], [33, 2, 1, "", "createTimeline"], [34, 2, 1, "", "formatXAxis"], [35, 2, 1, "", "formatYAxis"], [36, 2, 1, "", "formatYAxisUnits"], [37, 2, 1, "", "full_setup"], [38, 2, 1, "", "granulizeData"], [39, 2, 1, "", "scaleDTick"], [40, 2, 1, "", "setYAxisRange"], [41, 2, 1, "", "show"], [42, 2, 1, "", "showLastWeek"], [43, 2, 1, "", "showLastYear"], [44, 2, 1, "", "sparklines"], [45, 2, 1, "", "timeFormatXAxis"]], "otters.drive.ppt_gen": [[47, 1, 1, "", "PPTGen"]], "otters.drive.ppt_gen.PPTGen": [[48, 2, 1, "", "ExPSStyleName"], [49, 2, 1, "", "__init__"], [50, 2, 1, "", "addSlide"], [51, 2, 1, "", "savePPT"]], "otters.model": [[52, 0, 0, "-", "Regression"], [79, 0, 0, "-", "VirtualMeter"]], "otters.model.Regression": [[53, 1, 1, "", "LinearRegression"], [63, 1, 1, "", "Model"], [65, 1, 1, "", "Models"], [69, 1, 1, "", "Regression"]], "otters.model.Regression.LinearRegression": [[54, 2, 1, "", "__init__"], [55, 2, 1, "", "fit"], [56, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [58, 2, 1, "", "predict"], [59, 2, 1, "", "score"], [60, 2, 1, "", "set_fit_request"], [61, 2, 1, "", "set_params"], [62, 2, 1, "", "set_score_request"]], "otters.model.Regression.Model": [[64, 2, 1, "", "__init__"]], "otters.model.Regression.Models": [[66, 2, 1, "", "__init__"], [67, 2, 1, "", "regression"], [68, 2, 1, "", "tabulateModels"]], "otters.model.Regression.Regression": [[70, 2, 1, "", "__init__"], [71, 2, 1, "", "getCV"], [72, 2, 1, "", "getCVRMSE"], [73, 2, 1, "", "getR2"], [74, 2, 1, "", "getRegEquation"], [75, 2, 1, "", "model_component_graph"], [76, 2, 1, "", "regress"], [77, 2, 1, "", "stats"], [78, 2, 1, "", "to_frame"]], "otters.model.VirtualMeter": [[80, 1, 1, "", "AHU"], [82, 1, 1, "", "VirtualMeter"]], "otters.model.VirtualMeter.AHU": [[81, 2, 1, "", "__init__"]], "otters.model.VirtualMeter.VirtualMeter": [[83, 2, 1, "", "__init__"], [84, 2, 1, "", "cleanColNamesEMS"], [85, 2, 1, "", "createAHU"], [86, 2, 1, "", "splitEntities"]], "otters.vis": [[87, 0, 0, "-", "graph"]], "otters.vis.graph": [[88, 1, 1, "", "Graph"], [91, 1, 1, "", "Plot"]], "otters.vis.graph.Graph": [[89, 2, 1, "", "__init__"], [90, 2, 1, "", "show"]], "otters.vis.graph.Plot": [[92, 2, 1, "", "__init__"], [93, 2, 1, "", "addAreaLines"], [94, 2, 1, "", "addLines"], [95, 2, 1, "", "addScatter"], [96, 2, 1, "", "boundYAxis"], [97, 2, 1, "", "createPlot"], [98, 2, 1, "", "createTimeline"], [99, 2, 1, "", "formatXAxis"], [100, 2, 1, "", "formatYAxis"], [101, 2, 1, "", "full_setup"], [102, 2, 1, "", "scaleDTick"], [103, 2, 1, "", "setYAxisRange"], [104, 2, 1, "", "show"], [105, 2, 1, "", "sparklines"], [106, 2, 1, "", "timeFormatXAxis"]], "otters.wrangle": [[107, 0, 0, "-", "db_loader"], [115, 0, 0, "-", "file_loader"], [126, 0, 0, "-", "psychrometrics"], [187, 0, 0, "-", "time_tools"], [193, 0, 0, "-", "wrangler"]], "otters.wrangle.db_loader": [[108, 3, 1, "", "create_conn"], [109, 3, 1, "", "create_db"], [110, 3, 1, "", "dedupe"], [111, 3, 1, "", "getNasaWeather"], [112, 3, 1, "", "load"], [113, 3, 1, "", "ts2str"], [114, 3, 1, "", "upsert"]], "otters.wrangle.file_loader": [[116, 3, 1, "", "formatData"], [118, 3, 1, "", "getExcelDFs"], [119, 3, 1, "", "getFiles"], [120, 3, 1, "", "get_table_gaz"], [121, 3, 1, "", "get_table_tarif_M"], [122, 3, 1, "", "import_config"], [123, 3, 1, "", "replace_backslashes_in_dict"], [124, 3, 1, "", "save2xl"], [125, 3, 1, "", "standardize_num_format"]], "otters.wrangle.psychrometrics": [[127, 3, 1, "", "CalcPsychrometricsFromRelHum"], [128, 3, 1, "", "CalcPsychrometricsFromTDewPoint"], [129, 3, 1, "", "CalcPsychrometricsFromTWetBulb"], [130, 4, 1, "", "FREEZING_POINT_WATER_IP"], [131, 4, 1, "", "FREEZING_POINT_WATER_SI"], [132, 3, 1, "", "GetDegreeOfSaturation"], [133, 3, 1, "", "GetDryAirDensity"], [134, 3, 1, "", "GetDryAirEnthalpy"], [135, 3, 1, "", "GetDryAirVolume"], [136, 3, 1, "", "GetHumRatioFromEnthalpyAndTDryBulb"], [137, 3, 1, "", "GetHumRatioFromRelHum"], [138, 3, 1, "", "GetHumRatioFromSpecificHum"], [139, 3, 1, "", "GetHumRatioFromTDewPoint"], [140, 3, 1, "", "GetHumRatioFromTWetBulb"], [141, 3, 1, "", "GetHumRatioFromVapPres"], [142, 3, 1, "", "GetMoistAirDensity"], [143, 3, 1, "", "GetMoistAirEnthalpy"], [144, 3, 1, "", "GetMoistAirVolume"], [145, 3, 1, "", "GetRelHumFromHumRatio"], [146, 3, 1, "", "GetRelHumFromTDewPoint"], [147, 3, 1, "", "GetRelHumFromTWetBulb"], [148, 3, 1, "", "GetRelHumFromVapPres"], [149, 3, 1, "", "GetSatAirEnthalpy"], [150, 3, 1, "", "GetSatHumRatio"], [151, 3, 1, "", "GetSatVapPres"], [152, 3, 1, "", "GetSeaLevelPressure"], [153, 3, 1, "", "GetSpecificHumFromHumRatio"], [154, 3, 1, "", "GetStandardAtmPressure"], [155, 3, 1, "", "GetStandardAtmTemperature"], [156, 3, 1, "", "GetStationPressure"], [157, 3, 1, "", "GetTCelsiusFromTKelvin"], [158, 3, 1, "", "GetTDewPointFromHumRatio"], [159, 3, 1, "", "GetTDewPointFromRelHum"], [160, 3, 1, "", "GetTDewPointFromTWetBulb"], [161, 3, 1, "", "GetTDewPointFromVapPres"], [162, 3, 1, "", "GetTDryBulbFromEnthalpyAndHumRatio"], [163, 3, 1, "", "GetTDryBulbFromMoistAirVolumeAndHumRatio"], [164, 3, 1, "", "GetTFahrenheitFromTRankine"], [165, 3, 1, "", "GetTKelvinFromTCelsius"], [166, 3, 1, "", "GetTRankineFromTFahrenheit"], [167, 3, 1, "", "GetTWetBulbFromHumRatio"], [168, 3, 1, "", "GetTWetBulbFromRelHum"], [169, 3, 1, "", "GetTWetBulbFromTDewPoint"], [170, 3, 1, "", "GetUnitSystem"], [171, 3, 1, "", "GetVapPresFromHumRatio"], [172, 3, 1, "", "GetVapPresFromRelHum"], [173, 3, 1, "", "GetVapPresFromTDewPoint"], [174, 3, 1, "", "GetVaporPressureDeficit"], [175, 4, 1, "", "MAX_ITER_COUNT"], [176, 4, 1, "", "MIN_HUM_RATIO"], [177, 4, 1, "", "R_DA_IP"], [178, 4, 1, "", "R_DA_SI"], [179, 3, 1, "", "SetUnitSystem"], [180, 4, 1, "", "TRIPLE_POINT_WATER_IP"], [181, 4, 1, "", "TRIPLE_POINT_WATER_SI"], [182, 1, 1, "", "UnitSystem"], [183, 4, 1, "", "ZERO_CELSIUS_AS_KELVIN"], [184, 4, 1, "", "ZERO_FAHRENHEIT_AS_RANKINE"], [185, 3, 1, "", "dLnPws_"], [186, 3, 1, "", "isIP"]], "otters.wrangle.time_tools": [[188, 3, 1, "", "getLastNWeeks"], [189, 3, 1, "", "overlayPast"], [190, 3, 1, "", "selectiveResample"], [191, 3, 1, "", "str2dt"], [192, 3, 1, "", "time2timedelta"]], "otters.wrangle.wrangler": [[194, 3, 1, "", "compare_lists"], [195, 3, 1, "", "find_strs"], [196, 3, 1, "", "gapAndIsland"], [197, 3, 1, "", "mergeCloseEvents"], [198, 3, 1, "", "merge_df_cols"], [199, 3, 1, "", "merge_dfs"], [200, 3, 1, "", "two_letter_month_to_number"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "terms": {"": [5, 10, 21, 32, 53, 55, 61, 82, 86, 91, 97, 114, 116, 118, 151, 188, 189, 192, 194, 195, 197, 201, 206], "0": [21, 30, 53, 55, 59, 82, 86, 91, 96, 127, 128, 129, 130, 131, 137, 144, 145, 146, 147, 148, 159, 163, 168, 172, 176, 181, 188], "002": [120, 121, 125, 200], "01": [82, 86, 181], "018": 180, "02": [82, 86], "042": 178, "07": 176, "1": [23, 26, 53, 54, 55, 59, 60, 62, 82, 84, 86, 93, 94, 120, 121, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 185, 197, 200], "10": 110, "100": 175, "11": [111, 142], "12": [17, 132, 148, 152, 172, 197], "13": 139, "13a": 174, "14": [133, 135], "144": [133, 135, 144, 163], "15": [82, 86, 183], "16": 17, "17": [53, 55, 82, 86], "1959": 152, "1987": 174, "1e": 176, "2": [21, 28, 33, 53, 59, 91, 95, 98, 124, 174, 199, 206], "20": [141, 171], "2000": 152, "2009": 132, "2017": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 184, 185], "2024": 111, "2025": 111, "22": [120, 121, 125, 146, 148, 172, 200], "23": [53, 59], "25": 111, "26": [144, 163], "273": 183, "28": 134, "287": 178, "2nd": 152, "3": [44, 53, 60, 62, 105, 124, 154, 157, 161, 164, 165, 166], "30": [136, 143, 162], "32": [130, 180], "33": [140, 167], "35": [140, 167, 177], "36": [150, 173], "364": 43, "365": 111, "37": 161, "370486": [144, 163], "38": 161, "39": [183, 184], "4": [111, 155], "459": 184, "5": [111, 151, 152, 161, 185], "53": 177, "56": 111, "6": [151, 152, 161, 185, 188], "63058": 111, "67": 184, "673": [120, 121, 125, 200], "9b": [138, 153], "A": [53, 56, 59], "At": 110, "BE": 179, "FOR": [122, 201], "For": [53, 59], "IN": [122, 194, 201], "If": [5, 7, 53, 57, 110, 112, 114, 118, 119, 197], "In": [144, 163], "It": [21, 33, 91, 98, 116, 151, 188, 199, 201, 206], "Not": [114, 197], "TO": [122, 179, 201], "The": [5, 53, 59, 60, 61, 62, 63, 82, 86, 108, 109, 111, 112, 113, 114, 115, 116, 122, 133, 135, 144, 152, 161, 163, 201], "There": [82, 86], "These": [111, 206], "Will": [53, 55], "With": [21, 28, 91, 95], "__": [53, 61], "abi": 194, "abl": [21, 28, 91, 95], "abov": [151, 152, 176], "absent": 132, "absolut": [108, 109, 116, 118, 119, 201], "abstract": [21, 24, 29, 31, 52, 189], "accept": 176, "accur": 161, "achiev": [12, 18, 19, 161], "actual": [69, 72, 205], "ad": [12, 53, 55, 60, 62], "add": [21, 24, 28, 29, 31, 32, 91, 95, 97, 197], "addavgprodlin": 21, "addit": 53, "address": [5, 7], "addscatt": [21, 91], "addwtapschedul": 21, "after": [21, 33, 53, 91, 98], "against": [69, 72, 194], "agg": 194, "ago": 152, "ahu": [81, 82, 86], "air": [127, 128, 129, 132, 133, 134, 135, 136, 141, 142, 143, 144, 148, 149, 150, 151, 161, 162, 163, 171, 172, 173, 177, 178, 185], "ajust": [120, 121, 125, 200], "aka": [138, 153], "akonovia": [120, 121, 125, 200], "alcovi": [120, 121, 125, 200], "alia": [53, 60, 62], "all": [5, 53, 59, 82, 86, 112, 114, 118, 119, 122, 194, 195, 196, 201], "allow": [53, 60, 62], "alreadi": 188, "also": 205, "altitud": [152, 154, 155, 156], "alwai": [53, 59], "an": [12, 21, 28, 53, 60, 62, 91, 95, 109, 112, 116, 195, 196, 201], "analysi": [206, 208], "ani": [118, 119, 122, 176, 199, 201], "anyth": 207, "api": 52, "appdata": [5, 7], "appear": [144, 163], "append": 112, "ar": [21, 28, 53, 57, 60, 62, 91, 95, 111, 151, 161, 196, 197, 206], "arbitrari": 132, "arbitrarili": [53, 59], "arg": [127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 179, 185], "around": 151, "arrai": [53, 55, 58, 59], "ascend": 14, "ashra": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 184, 185], "assign": [12, 18, 19], "associ": [63, 82, 86], "assum": 111, "atmospher": [127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 147, 149, 150, 154, 155, 158, 160, 163, 167, 168, 169, 171, 174], "attribut": [53, 126], "automat": 182, "autorang": [21, 30, 91, 96], "autorangeoptions_includ": [21, 30, 91, 96], "avail": 53, "averag": [12, 18, 19, 152], "avgprod": [21, 24], "ax": [21, 32, 91, 97], "axi": [21, 30, 91, 96], "backslash": [122, 201], "barometr": [152, 154, 156], "bascial": 12, "base": [1, 5, 12, 19, 21, 47, 53, 63, 65, 69, 80, 82, 86, 88, 91, 136, 162, 163, 182], "basic": [69, 72], "becaus": [53, 59, 112, 206], "befor": [175, 179], "begin": [112, 114], "being": 118, "belong": 205, "below": [151, 176], "best": [53, 59], "beta": 53, "biw": [82, 86], "blank": [116, 201], "bleed": [116, 201], "bool": [53, 57, 60, 62, 82, 86, 114, 118, 119, 186], "boolean": [122, 194, 201], "bound": [21, 30, 91, 96], "boundyaxi": [21, 91], "break": 114, "broken": 196, "brook": 152, "btu": [127, 128, 129, 134, 136, 143, 149, 162], "bug": 110, "build": 52, "bulb": [127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 172, 174, 185], "bump": [191, 201], "bunch": 197, "c": [5, 7, 53, 58, 111, 120, 121, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 172, 173, 174, 183, 185, 200], "calcul": [53, 127, 128, 129, 197], "call": [53, 59, 122, 179, 201], "can": [21, 33, 53, 59, 82, 86, 91, 98, 108, 109, 111, 113, 114, 116, 119, 179, 195, 196, 199, 201], "case": 151, "cast": [53, 55], "caus": 114, "celsiu": [131, 157, 165, 181, 183], "ch": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 184, 185], "chang": [21, 24, 29, 31, 52, 53, 60, 62, 110, 113, 114, 189], "check": [53, 56, 111, 186], "chiller": [82, 86], "chosen": 179, "chunk": 110, "class": [0, 1, 5, 12, 21, 46, 47, 52, 53, 63, 65, 69, 79, 80, 82, 87, 88, 91, 126, 182, 203, 204], "clean": 12, "cleaner": 197, "click": 119, "close": 197, "code": 194, "coeffici": [53, 59, 69, 72, 144, 163], "col": [23, 26, 44, 93, 94, 105, 113, 194], "cole": 152, "colord": 190, "column": [12, 18, 21, 33, 88, 89, 91, 98, 112, 113, 114, 191, 194, 195, 196, 201], "colwidth": [44, 105], "com": 119, "combo": 194, "common": [82, 86], "comparelist": 194, "complet": [82, 86], "complic": [21, 30, 91, 96], "compon": [53, 61, 75], "concis": [116, 201], "config": [12, 13, 122, 189, 201], "configfold": [122, 201], "confus": 206, "conn": [108, 110, 112, 114], "connect": [108, 109, 110, 112, 114], "consist": [53, 59], "constant": [53, 59, 133, 135, 177, 178], "consumpt": 189, "contain": [53, 57, 112, 114, 206], "control": 189, "conveni": 161, "converg": [151, 161], "convers": [133, 135, 144, 157, 163, 164, 165, 166], "convert": [157, 164, 165, 166], "coord": 111, "coordin": 111, "copy_x": [53, 54], "could": [122, 201], "count": [21, 29], "crap": [21, 32, 91, 97], "creat": [21, 31, 32, 33, 91, 97, 98, 108, 109, 114], "createdteventlabel": 21, "createplot": [21, 91], "createppt": 5, "createtimelin": [21, 91], "csv": 115, "current": [12, 19, 21, 24, 29, 30, 31, 91, 96, 152, 189], "dai": [43, 111], "daili": 111, "data": [5, 10, 53, 55, 111, 112, 113, 114, 115, 124, 188, 194, 196, 199, 207, 208], "databas": [5, 10, 108, 109, 110, 111], "datafram": [21, 33, 82, 86, 88, 89, 91, 98, 111, 112, 113, 114, 116, 118, 188, 191, 199, 201], "date": [1, 2, 111, 200], "datetim": [111, 112, 113], "datetime_arg": [191, 201], "db": [5, 10, 108, 109, 110, 111, 112, 114], "db_file": [108, 109], "db_loader": [108, 109, 110, 111, 112, 113, 114, 203, 204], "db_loc": 111, "de": 110, "decis": 206, "dedupe_col": 110, "dedupl": 110, "deep": [53, 57], "default": [53, 55, 57, 59, 60, 62, 82, 86, 111, 114, 116, 118, 119, 122, 188, 191, 201], "deficit": 174, "defin": [53, 59, 82, 86, 151], "definit": [112, 132], "degre": [127, 128, 129, 132, 157, 164, 165, 166, 183, 184], "delet": [5, 7, 197], "densiti": [133, 142], "deriv": 185, "descript": [21, 33, 91, 98], "determin": [53, 59], "develop": [120, 121, 194], "dew": [127, 128, 129, 139, 146, 158, 159, 160, 161, 169, 173], "df": [21, 33, 80, 81, 82, 83, 85, 86, 88, 89, 91, 98, 112, 114, 124, 125, 188, 189, 190, 191, 194, 195, 196, 198, 199, 201], "dfall": [42, 43], "dfcol": [14, 196], "dict": [21, 31, 53, 57, 61, 122, 201], "dictionari": [82, 86, 111, 123], "didn": [112, 116, 194, 201], "dir": [122, 201], "directli": [21, 31], "discontinu": 151, "disregard": [53, 59], "do": 110, "document": [120, 121, 125, 200], "doe": [109, 113, 151, 205], "doesn": [114, 116, 201], "don": 197, "download": 110, "downtim": [21, 31], "downtimeev": [2, 3, 4], "dqw4w9wgxcq": 119, "drive": [1, 5, 12, 21, 47, 202, 203, 204], "drop": [191, 199, 201], "dropdown": 111, "dropeventsbelownrow": 17, "dry": [127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 172, 174, 177, 178, 185], "dtype": [53, 55], "dumli": 112, "duplic": 110, "e": [53, 60, 62, 82, 86, 132], "each": [21, 30, 53, 55, 60, 61, 62, 82, 86, 91, 96, 118, 197], "easier": [5, 10, 194], "edit": 152, "effect": [53, 60, 62], "eg": [82, 86], "elev": [154, 155], "emo": [120, 121, 125, 200], "empti": [82, 86, 88, 89, 119, 122, 191, 201], "enable_metadata_rout": [53, 60, 62], "encapsul": [53, 56], "end": [38, 122, 201], "end_dat": 111, "energi": 206, "energir": 125, "engin": 152, "enough": 52, "enthalpi": [127, 128, 129, 134, 136, 143, 149, 162], "entir": [110, 196, 197], "entiti": [82, 86], "enum": 182, "enumer": 182, "environ": [120, 121, 206], "ep": [21, 32, 91, 97], "eqn": [132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 153, 154, 155, 161, 162, 163, 167, 171, 172, 173, 174, 185], "equal": [144, 163], "equat": 161, "equip": 206, "error": [53, 60, 62, 69, 72, 195], "essenti": [151, 205], "estim": [53, 55, 57, 59, 60, 61, 62], "etc": [82, 86, 115], "event": [21, 31, 33, 91, 98, 196, 197], "eventu": [21, 33, 91, 98], "exact": [157, 164, 165, 166], "exampl": [82, 86, 119], "excel": [115, 116, 118, 201], "except": [53, 59], "execut": 202, "exist": [53, 60, 62, 109, 112, 114], "exit": 175, "exp": [1, 6, 7, 9, 10, 11, 12, 21, 203, 204], "expect": [53, 59], "expos": 182, "express": [183, 184], "extend": 206, "extens": 12, "ey": [116, 201], "f": [111, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 184, 185], "fact": 112, "factor": [133, 135, 144, 163], "factur": [120, 121, 125, 200], "fahrenheit": [130, 164, 166, 180, 184], "fail": [5, 7], "fals": [5, 9, 10, 45, 53, 60, 62, 75, 78, 82, 84, 86, 106, 114, 118, 119, 120, 121, 122, 124, 201], "far": 199, "faster": [120, 121], "featur": [53, 59], "feez": 151, "fig": [21, 30, 32, 37, 91, 96, 97, 101], "figur": [21, 24, 29, 31, 110, 189], "file": [115, 116, 118, 119, 122, 124, 201], "file_load": [116, 118, 119, 120, 121, 122, 123, 124, 125, 203, 204], "file_nam": [120, 121], "filetyp": 119, "filterword": 84, "find": [191, 195, 201], "first": [21, 33, 91, 98, 116, 191, 201], "fit": [53, 59, 60, 206], "fit_intercept": [53, 54], "flag": 196, "float": [53, 59, 69, 72, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185], "flvaour": 113, "folder": [5, 7, 118, 119, 122, 201], "folloif": [21, 30, 91, 96], "follow": 111, "foreign": 114, "form": [53, 61], "format": [21, 32, 33, 91, 97, 98, 111, 112, 116, 122, 192, 201], "formatdata": [201, 202], "formula": 151, "found": [111, 112], "frac": [53, 59], "freez": [130, 131, 151], "freq": 190, "frequenc": 111, "fro": 194, "from": [5, 10, 12, 18, 21, 33, 52, 53, 59, 82, 86, 91, 98, 110, 111, 115, 116, 118, 122, 132, 136, 138, 152, 153, 156, 161, 162, 194, 201, 206], "ft": [133, 135, 142, 144, 152, 154, 155, 156, 163, 177], "ft\u00b3": [127, 128, 129, 135, 144, 163], "func": [82, 86, 112], "funcion": [110, 114], "function": [107, 110, 115, 125, 126, 127, 128, 129, 136, 151, 156, 157, 161, 162, 163, 164, 165, 166, 172, 176, 179, 185, 187, 193, 197, 202], "fundament": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 184, 185], "g": [53, 60, 62], "ga": [133, 135, 177, 178], "gb": 110, "gen_pi": [5, 7], "gener": [53, 59, 63], "get": [5, 10, 53, 56, 57, 59, 63, 82, 86, 111, 119, 188, 194, 197, 201, 208], "get_metadata_rout": 53, "get_param": 53, "getcvrms": 69, "getmoistairenthalpi": [136, 162], "getmoistairvolum": 163, "getsealevelpressur": 156, "getsql": 5, "gettdewpointfromvappr": 151, "give": 161, "given": [53, 60, 62, 111, 127, 128, 129, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174], "go": [5, 10], "gonna": [21, 28, 52, 91, 95], "good": 196, "gov": 111, "govern": 111, "governancedatabasesleidos_meta": 111, "graph": [13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 75, 89, 90, 91, 189, 203, 204], "guid": [53, 56, 60, 62], "h": 192, "ha": [53, 60, 62, 110, 112, 114, 179], "haffect": 52, "handbook": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 178, 183, 184, 185], "hasn": 110, "have": [21, 24, 29, 31, 53, 61, 82, 86, 110, 113, 120, 121, 122, 151, 161, 189, 194, 199, 201, 206], "he": 110, "helper": 185, "here": [21, 32, 91, 97, 111, 119, 120, 121, 161, 205], "hess": 152, "holt": 152, "hour": [152, 188, 197], "hourli": 111, "hover": [21, 33, 91, 98], "how": [53, 56, 60, 62], "href": [111, 119], "http": [111, 119], "humid": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 158, 159, 162, 163, 167, 168, 171, 172, 174, 176], "humratio": [132, 142, 143, 144, 145, 153, 158, 162, 163, 167, 171, 174], "i": [12, 21, 24, 29, 30, 31, 32, 53, 59, 60, 62, 82, 86, 91, 96, 97, 110, 111, 112, 113, 114, 116, 125, 132, 133, 135, 144, 151, 152, 156, 161, 163, 186, 188, 189, 194, 197, 199, 201, 205, 208], "id": [82, 86, 114], "identifi": [82, 84, 86], "idk": [21, 28, 91, 95, 110, 112, 114], "ie": 196, "ignor": [53, 60, 62, 82, 86], "import": [118, 122, 151, 188, 202], "import_config": [201, 202], "inaccuraci": 151, "includ": 53, "index": [84, 88, 89, 112, 188, 191, 201], "index_nam": [191, 201], "indic": [21, 24, 29, 179], "individu": [53, 55], "influenc": [53, 59], "info": 119, "inform": [53, 56], "inject": 114, "input": [53, 59], "insert": 202, "insid": [53, 60, 62], "instanc": [53, 61], "instead": [53, 59, 60, 62, 132], "int": [175, 188], "integ": 114, "interact": 206, "intercept": 53, "intern": 125, "intrant": [120, 121, 125, 200], "introduct": 152, "invers": 156, "invert": [151, 161], "invoic": 125, "iof": 202, "ip": [127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 171, 172, 173, 174, 177, 179, 185, 186], "ipynb": [120, 121, 125, 200], "isn": [191, 201], "iter": [161, 175, 196], "its": 205, "j": [127, 128, 129, 134, 136, 143, 149, 162, 178], "jsut": 195, "just": [5, 10, 112, 125, 156, 161, 194], "just_baselin": [69, 72, 75, 78], "k": [157, 165, 178, 183], "keep": [12, 53, 59, 199], "kei": [112, 114], "kelvin": [157, 165, 183], "kernel": [53, 59], "kg": [127, 128, 129, 133, 134, 135, 136, 142, 143, 144, 149, 162, 163], "kg_air": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 158, 162, 163, 167, 171, 174], "kg_dry_air": [138, 153], "kg_dryair": 178, "kg_h\u2082o": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 158, 162, 163, 167, 171, 174], "know": [110, 112], "kwarg": [21, 23, 26, 28, 44, 63, 64, 67, 69, 70, 75, 88, 89, 91, 93, 94, 95, 105], "label": [21, 31], "larc": 111, "last": [188, 189, 197], "latter": [53, 61], "lb": [127, 128, 129, 133, 134, 135, 136, 142, 143, 144, 149, 162, 163], "lb_air": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 158, 162, 163, 167, 171, 174], "lb_dry_air": [138, 153], "lb_dryair": 177, "lb_forc": 177, "lb_h\u2082o": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 158, 162, 163, 167, 171, 174], "learn": 52, "leav": [116, 201], "legend": [21, 32, 91, 97], "leidos_meta": 111, "lemon": [21, 28, 91, 95], "less": 161, "let": 110, "level": [23, 26, 93, 94, 152, 156], "librari": [179, 206], "like": [21, 33, 53, 55, 58, 59, 91, 98, 110, 116, 201, 205, 206], "linear": [53, 55, 58], "linearregress": [54, 55, 56, 57, 58, 59, 60, 61, 62], "list": [21, 28, 31, 53, 59, 63, 82, 86, 91, 95, 110, 111, 114, 118, 119, 194, 195, 197, 199], "live": 5, "ll": [21, 24, 29, 31, 82, 86, 189], "load": [114, 115, 208], "loadwatch": [5, 10], "local": [5, 7], "log": 185, "logarithm": 161, "long": 112, "loop": [175, 195], "lowacheiv": [21, 24], "lowdf": [12, 18], "lowest": [12, 18, 19], "luca": 110, "lucalafontain": [120, 121, 125, 200], "lufa": [120, 121, 125, 200], "m": [110, 113, 133, 142, 152, 154, 155, 156, 192], "mai": [53, 59], "main": [5, 12], "make": [5, 10, 112, 116, 120, 121, 197, 201], "map": [53, 57, 74, 75, 78], "match": 194, "mathemat": 206, "matrix": [53, 55, 58, 59], "max": [21, 30, 91, 96], "maximum": 175, "maxnum": [82, 86], "mean": [53, 59, 118, 119], "meancol": 190, "meant": [5, 10], "mechan": [53, 56, 60, 62], "merg": [197, 199], "mergeclos": 17, "mergewithinhour": [17, 197], "meta": [53, 60, 62], "metadata": [53, 56, 60, 62], "metadata_rout": [53, 60, 62], "metadatarequest": [53, 56], "meteorologi": 152, "meter": 206, "method": [1, 5, 12, 21, 47, 53, 59, 60, 61, 62, 63, 65, 69, 80, 82, 88, 91, 161], "mind": 112, "minimum": 176, "minut": 188, "miss": [82, 86], "mix": [138, 153], "model": [52, 53, 55, 58, 59, 64, 66, 67, 68, 69, 72, 75, 80, 82, 202, 203, 204], "modifi": 208, "modul": [115, 126, 202, 203, 205, 206], "moist": [127, 128, 129, 136, 141, 142, 143, 144, 148, 161, 162, 163, 171, 172, 173], "moistairdens": 142, "moistairenthalpi": [136, 162], "moistairvolum": 163, "mondai": 188, "more": [119, 199], "most": [21, 32, 91, 97, 113, 116, 201], "move": [21, 30, 91, 96], "much": 161, "multi": 114, "multioutput": [53, 59], "multioutputregressor": [53, 59], "must": [112, 114, 122, 201], "m\u00b3": [127, 128, 129, 135, 144, 163], "n": 188, "n_coef": 53, "n_featur": [53, 55, 58, 59], "n_job": [53, 54, 55, 60], "n_output": [53, 59], "n_sampl": [53, 55, 58, 59], "n_samples_fit": [53, 59], "n_target": [53, 55], "name": [21, 33, 53, 57, 60, 62, 63, 64, 67, 69, 70, 80, 81, 85, 91, 98, 111, 112, 114, 116, 201], "nan": 199, "narrow": 161, "nasa": 111, "natur": 185, "ndai": 189, "necessari": [53, 55, 197], "need": [21, 28, 30, 91, 95, 96, 110, 161, 206], "neg": [53, 59], "nest": [53, 61], "never": 112, "new": [112, 114, 196, 197], "newton": 161, "none": [11, 21, 32, 37, 44, 53, 55, 59, 60, 62, 69, 70, 72, 74, 75, 78, 91, 97, 101, 105, 109, 110, 112, 114, 116, 170, 179, 190, 201], "normal": 195, "note": [60, 62, 132, 133, 135, 136, 144, 151, 152, 156, 157, 161, 162, 163, 164, 165, 166, 179], "noth": [12, 18, 19], "now": [52, 111], "np": 196, "nr": 161, "number": [12, 18, 53, 59, 82, 86, 175, 196, 199], "numer": 195, "nummber": [12, 19], "ny": 152, "object": [1, 5, 12, 47, 53, 55, 56, 59, 60, 61, 62, 63, 65, 80, 82, 88, 113, 195], "observ": 152, "ok": 174, "one": [23, 93, 116, 196, 201], "onli": [21, 33, 53, 60, 62, 91, 98, 111, 116, 122, 201], "open": 109, "optim": [116, 201], "option": [53, 60, 62, 111], "orifin": 194, "origin": [53, 60, 62], "other": [53, 60, 62, 206], "otherwis": [53, 60, 62, 114, 151, 195], "otter": [1, 5, 12, 21, 47, 53, 63, 65, 69, 80, 82, 88, 91, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204], "out": [52, 110], "output": [116, 201], "over": 195, "overlai": 189, "overlap": 199, "own": 205, "p": 53, "pa": [127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 185], "packag": 52, "pad": [82, 86], "paddingdigit": [82, 86], "panda": [110, 112], "param": [53, 57, 61, 111], "paramat": [21, 33, 91, 98], "paramet": [69, 72, 82, 86, 108, 109, 111, 112, 113, 114, 116, 118, 119, 122, 188, 191, 195, 196, 199, 201], "parent": [1, 2, 12, 13, 21, 22, 47, 49, 63, 69, 70, 80, 81, 91, 92], "part": 151, "partial": [127, 128, 129, 141, 148, 161, 171, 172, 173], "pass": [21, 31, 53, 60, 62, 114, 118, 119], "past": 188, "path": [108, 109, 111, 118, 119, 122, 201], "pattern": 194, "pd": [111, 113, 114], "pdf": 115, "percentag": [12, 19], "perfect": [133, 135], "pipelin": [53, 60, 61, 62], "pk_type": 114, "plant": [11, 111], "pleas": [53, 56, 60, 62], "plot": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "point": [110, 127, 128, 129, 130, 131, 139, 146, 151, 158, 159, 160, 161, 169, 173, 180, 181], "possibl": [53, 59, 61], "power": 111, "ppt_gen": [47, 203, 204], "pptgen": [48, 49, 50, 51], "ppttitl": 51, "precomput": [53, 59], "predict": [53, 59], "prefix": [82, 86], "present": [21, 30, 91, 96, 151], "pressur": [127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 185], "pretti": [110, 111, 113, 114, 207], "primari": [112, 114], "primary_kei": 114, "print": 118, "privat": 182, "procedur": 152, "product": [12, 19, 21, 29], "program": 205, "prolli": [116, 201], "properli": 151, "provid": [53, 60, 62, 115, 161], "psi": [127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 158, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 185], "psychrometr": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 203, 204], "put": [21, 33, 91, 98], "pw": 171, "python": [5, 7, 111], "quot": [122, 201], "r": [53, 59, 164, 166, 177, 184], "r2_score": [53, 59], "r_da_ip": [144, 163], "rais": [53, 60, 62], "randomli": 199, "rang": [21, 30, 91, 96, 127, 128, 129, 137, 145, 146, 147, 148, 159, 161, 168, 172], "rankin": [164, 166, 184], "raphson": 161, "rather": 161, "ratio": [127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 158, 162, 163, 167, 171, 174, 176], "rb": 152, "re": [12, 21, 28, 52, 91, 95], "read": 125, "read_jci_data": [120, 121, 125, 200], "readabl": [112, 113], "realli": 161, "rearrang": [136, 162, 163], "receiv": 111, "recurs": [118, 119, 122, 197, 201], "refer": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 178, 183, 184, 185], "regress": [53, 63, 65, 70, 71, 72, 73, 74, 75, 77, 78, 161, 203, 204, 206], "regressor": [53, 59], "rel": [108, 109, 116, 118, 119, 122, 127, 128, 129, 137, 145, 146, 147, 148, 159, 168, 172, 201], "relationship": [133, 135], "relative_humidity_at_2_met": 111, "relev": [53, 60, 62], "relhum": [127, 137, 159, 168, 172], "renam": [116, 191, 201], "replac": [21, 30, 91, 96, 114], "request": [53, 60, 62], "requir": [21, 33, 82, 86, 91, 98, 108, 109, 111, 112, 113, 114, 116, 188, 191, 195, 196, 199, 201], "resampl": [120, 121], "reset": 176, "residu": [53, 59, 69, 72], "resourc": 111, "retain": [53, 60, 62], "return": [12, 18, 19, 21, 24, 29, 31, 69, 72, 82, 86, 108, 109, 111, 112, 113, 114, 116, 118, 119, 122, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 185, 188, 189, 191, 194, 195, 196, 197, 199, 201], "rh2m": 111, "right": 111, "rinehart": 152, "roll": [21, 33, 91, 98], "root": [122, 201], "rout": [53, 56, 60, 62], "row": [14, 15, 110], "run": 189, "said": 111, "same": [132, 196], "sampl": [53, 55, 58, 59], "sample_weight": [53, 55, 59, 62], "satur": [127, 128, 129, 132, 149, 150, 151, 161, 185], "scaletimestamp": [45, 106], "schema": [5, 10], "scientist": 152, "scikit": 52, "score": [53, 62], "scratch": 52, "script": 205, "se": [120, 121], "sea": [152, 156], "sealevelpressur": 156, "search": [118, 119, 195], "section": [12, 111, 157, 164, 165, 166, 196], "see": [5, 10, 53, 60, 62, 156], "self": [21, 30, 53, 55, 59, 60, 61, 62, 91, 96], "send": 113, "separ": [82, 86], "seper": [82, 86], "seri": [38, 113, 194, 195, 196, 199], "set": [53, 61, 179, 182, 191, 201], "set_config": [53, 60, 62], "set_fit_request": 53, "set_param": 53, "set_score_request": 53, "setlowachiev": 12, "setlowpercentag": 12, "shape": [53, 55, 58, 59], "sheet": [116, 124, 201], "sheet1": [116, 201], "shorthand": 208, "should": [21, 28, 30, 33, 52, 53, 60, 62, 82, 86, 91, 95, 96, 98, 114, 151], "show": 194, "si": [127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 171, 172, 173, 174, 178, 179, 185, 186], "simpl": [53, 61, 207], "simul": 206, "sinc": 53, "singl": [122, 196, 201], "sklearn": [53, 60, 62], "sl": 152, "small": 151, "smooth": 161, "so": [21, 28, 33, 53, 61, 91, 95, 98, 116, 122, 197, 201], "solv": [138, 150, 161, 167, 171], "some": [53, 59, 60, 62, 110, 199, 206], "someth": 205, "somewher": [110, 112, 114], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201], "space": [82, 86], "spars": [53, 55, 58], "specif": [5, 10, 21, 29, 63, 127, 128, 129, 138, 144, 153, 163], "specifichum": 138, "split": [82, 86], "splitent": 82, "sql": [112, 113, 114], "sqlite": [108, 109, 110, 112, 113, 114], "sqlite3": 113, "squar": [53, 59], "stack_group": [23, 93], "stackoverflow": [116, 201], "standalon": [21, 33, 91, 98], "standard": [152, 154, 155], "start": [38, 188], "start_dat": 111, "startcel": 124, "station": [152, 156], "stationpressur": 152, "statist": 53, "stole": [116, 201], "str": [53, 60, 62, 108, 109, 110, 111, 112, 114, 116, 201], "str2dt": [201, 202], "string": [108, 109, 111, 112, 113, 114, 116, 118, 119, 122, 179, 191, 194, 195, 201], "stull": 152, "style": [21, 32, 91, 97], "sub": [53, 60, 62, 122, 201, 203, 204], "subfold": [118, 119], "subobject": [53, 57], "suck": [21, 28, 91, 95], "sum": [53, 59], "sumcol": [190, 194], "summari": 202, "sundai": 188, "super": [116, 201], "suppli": [21, 24, 29, 33, 91, 98, 118, 119, 122, 189, 201], "support": [53, 55], "sure": [110, 111, 113, 114], "system": [170, 179, 186], "t": [53, 59, 110, 112, 114, 116, 191, 194, 197, 201], "t2m": 111, "tabl": [110, 112, 114, 124], "table_nam": [110, 112, 114], "tag": [82, 86], "take": [12, 18, 19, 21, 33, 69, 72, 82, 86, 91, 98, 110, 112, 196, 197, 199], "target": [53, 55], "tcelsiu": 165, "tdewpoint": [128, 139, 146, 169, 173], "tdrybulb": [127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 159, 160, 161, 163, 167, 168, 169, 172, 174, 185], "tell": [69, 72, 199], "temp": [5, 7], "temperatur": [111, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 185], "temperature_at_2_met": 111, "term": [82, 86], "test": [53, 59], "text": [21, 33, 91, 98], "tfahrenheit": 166, "tha": 112, "than": 161, "them": [21, 31, 82, 86], "theoret": 152, "thi": [5, 7, 12, 21, 30, 32, 52, 53, 56, 57, 59, 60, 61, 62, 91, 96, 97, 110, 112, 114, 116, 120, 121, 125, 132, 151, 156, 176, 179, 188, 194, 197, 201, 205, 206, 208], "think": 194, "those": [21, 28, 91, 95], "though": 199, "time": 112, "time_tool": [188, 189, 190, 191, 192, 203, 204], "timecol": [191, 201], "timedelta": 111, "timelin": [21, 33, 91, 98], "timestamp": [112, 113, 188, 191, 201], "timsetamp": [21, 33, 91, 98], "titl": 75, "tkelvin": 157, "to_datetim": [191, 201], "todai": 111, "too": [21, 30, 91, 96], "total": [53, 59, 69, 72], "trace": [21, 30, 91, 96], "track": 196, "trail": [82, 86], "train": [53, 55], "trankin": [164, 166], "translat": [191, 201], "treat": [122, 201], "tree": 206, "trendlin": [21, 32, 91, 97], "tri": [82, 86], "tripl": [151, 180, 181], "true": [17, 53, 54, 57, 59, 60, 62, 69, 72, 88, 89, 118, 119, 122, 124, 191, 201], "tstar": 167, "tupl": [127, 128, 129], "turn": [112, 113], "twetbulb": [129, 140, 147, 160], "type": [111, 113, 119, 195, 196, 206], "u": [53, 59, 152], "unchang": [53, 60, 62], "undocu": [120, 121, 125, 200], "uniform_averag": [53, 59], "uniqu": 195, "unit": [111, 132, 144, 163, 170, 177, 178, 179, 183, 184], "unitless": [127, 128, 129], "unitsystem": [170, 179], "univers": [133, 135, 177, 178], "untest": [120, 121], "up": 196, "updat": [53, 60, 61, 62], "update_yax": [21, 30, 91, 96], "upload": 114, "upsert": 112, "urmom": 80, "us": [52, 53, 58, 59, 60, 62, 110, 112, 115, 116, 122, 125, 132, 151, 152, 161, 170, 176, 179, 182, 186, 194, 201], "useful": 195, "user": [5, 7, 53, 56, 60, 62, 120, 121, 125, 200], "usernam": [5, 7], "ustil": 194, "usual": [53, 161], "util": [53, 60, 62, 127, 128, 129, 157, 164, 165, 166], "v": [53, 59, 119], "valid": [161, 194], "valu": [53, 55, 57, 58, 59, 176, 182, 199], "vanish": 151, "vapor": [127, 128, 129, 141, 148, 151, 161, 171, 172, 173, 174, 185], "vapour": [127, 128, 129, 161], "vappr": [141, 148, 161], "variat": [69, 72], "verbos": [5, 9, 10, 84, 114, 118], "veri": 161, "version": [5, 7, 53, 55, 59, 60, 62, 132, 177, 178], "vi": [12, 88, 91, 202, 203, 204], "virtual": 206, "virtualmet": [80, 83, 84, 85, 86, 203, 204], "visibl": 124, "visual": [202, 203, 204], "volum": [127, 128, 129, 135, 144, 163], "vsl": [120, 121, 125, 200], "w": [53, 59, 150], "wai": [21, 30, 91, 96, 194], "want": [111, 120, 121, 189, 195], "watch": 119, "water": [127, 128, 129, 130, 131, 141, 148, 151, 161, 171, 172, 173, 180, 181], "wb_name": [116, 201], "we": [12, 21, 32, 52, 53, 91, 97, 197, 208], "weather": 111, "websit": 111, "week": 188, "weekdai": 188, "weight": [53, 55, 59], "well": [53, 61], "wet": [127, 128, 129, 140, 147, 160, 167, 168, 169], "what": [5, 10], "whatev": [21, 33, 91, 98], "when": [53, 59, 112], "where": [53, 59, 109, 110, 188, 196, 199, 208], "whether": [82, 86, 186], "which": [53, 114, 116, 144, 151, 161, 163, 201], "while": 175, "wihtou": 52, "wildcard": [82, 86], "winston": 152, "within": 197, "won": 114, "work": [53, 56, 60, 61, 62, 111, 122, 201], "workbook": [116, 201], "wors": [53, 59], "would": [53, 59, 110, 194, 195, 205], "wrangl": [108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204], "wrangler": [194, 195, 196, 197, 198, 199, 200, 203, 204], "wrote": 112, "wtap": [21, 29], "www": 119, "x": [21, 28, 32, 53, 55, 58, 59, 63, 64, 67, 69, 70, 91, 95, 97], "xl": 119, "xlsx": [119, 122, 201], "y": [21, 28, 30, 32, 53, 55, 59, 63, 64, 67, 69, 70, 91, 95, 96, 97], "y_pred": [53, 59], "y_true": [53, 59], "yaml": [122, 201], "year": 189, "you": [21, 28, 33, 53, 60, 62, 69, 72, 82, 86, 91, 95, 98, 110, 111, 113, 116, 122, 189, 195, 199, 201], "your": [5, 7, 110, 116, 201], "youtub": 119, "ytitl": [44, 105], "z": 111, "zero": [183, 184], "\u00b2": [133, 135, 144, 163], "\u00b3": [133, 142], "\u00b9": [127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 158, 162, 163, 167, 171, 174, 177, 178], "\u00e9nergir": [120, 121, 125, 200]}, "titles": ["ExPS", "DowntimeEvent", "__init__", "setAvgNonProd", "setTargets", "ExPS", "__init__", "createPPT", "getCSV", "getExcel", "getSQL", "savePPT", "Graph", "__init__", "getNRowAvg", "setAvgProd", "setDf", "setDowntimeEvents", "setLowAchieved", "setLowPercentage", "show", "Plot", "__init__", "addAreaLines", "addAvgProdLine", "addLegendLabels", "addLines", "addLowAchievedLine", "addScatter", "addWTAPSchedule", "boundYAxis", "createDTEventLabel", "createPlot", "createTimeline", "formatXAxis", "formatYAxis", "formatYAxisUnits", "full_setup", "granulizeData", "scaleDTick", "setYAxisRange", "show", "showLastWeek", "showLastYear", "sparklines", "timeFormatXAxis", "ppt_gen", "PPTGen", "ExPSStyleName", "__init__", "addSlide", "savePPT", "Regression", "LinearRegression", "__init__", "fit", "get_metadata_routing", "get_params", "predict", "score", "set_fit_request", "set_params", "set_score_request", "Model", "__init__", "Models", "__init__", "regression", "tabulateModels", "Regression", "__init__", "getCV", "getCVRMSE", "getR2", "getRegEquation", "model_component_graph", "regress", "stats", "to_frame", "VirtualMeter", "AHU", "__init__", "VirtualMeter", "__init__", "cleanColNamesEMS", "createAHU", "splitEntities", "graph", "Graph", "__init__", "show", "Plot", "__init__", "addAreaLines", "addLines", "addScatter", "boundYAxis", "createPlot", "createTimeline", "formatXAxis", "formatYAxis", "full_setup", "scaleDTick", "setYAxisRange", "show", "sparklines", "timeFormatXAxis", "db_loader", "create_conn", "create_db", "dedupe", "getNasaWeather", "load", "ts2str", "upsert", "file_loader", "formatData", "getCSVDFs", "getExcelDFs", "getFiles", "get_table_gaz", "get_table_tarif_M", "import_config", "replace_backslashes_in_dict", "save2xl", "standardize_num_format", "psychrometrics", "CalcPsychrometricsFromRelHum", "CalcPsychrometricsFromTDewPoint", "CalcPsychrometricsFromTWetBulb", "FREEZING_POINT_WATER_IP", "FREEZING_POINT_WATER_SI", "GetDegreeOfSaturation", "GetDryAirDensity", "GetDryAirEnthalpy", "GetDryAirVolume", "GetHumRatioFromEnthalpyAndTDryBulb", "GetHumRatioFromRelHum", "GetHumRatioFromSpecificHum", "GetHumRatioFromTDewPoint", "GetHumRatioFromTWetBulb", "GetHumRatioFromVapPres", "GetMoistAirDensity", "GetMoistAirEnthalpy", "GetMoistAirVolume", "GetRelHumFromHumRatio", "GetRelHumFromTDewPoint", "GetRelHumFromTWetBulb", "GetRelHumFromVapPres", "GetSatAirEnthalpy", "GetSatHumRatio", "GetSatVapPres", "GetSeaLevelPressure", "GetSpecificHumFromHumRatio", "GetStandardAtmPressure", "GetStandardAtmTemperature", "GetStationPressure", "GetTCelsiusFromTKelvin", "GetTDewPointFromHumRatio", "GetTDewPointFromRelHum", "GetTDewPointFromTWetBulb", "GetTDewPointFromVapPres", "GetTDryBulbFromEnthalpyAndHumRatio", "GetTDryBulbFromMoistAirVolumeAndHumRatio", "GetTFahrenheitFromTRankine", "GetTKelvinFromTCelsius", "GetTRankineFromTFahrenheit", "GetTWetBulbFromHumRatio", "GetTWetBulbFromRelHum", "GetTWetBulbFromTDewPoint", "GetUnitSystem", "GetVapPresFromHumRatio", "GetVapPresFromRelHum", "GetVapPresFromTDewPoint", "GetVaporPressureDeficit", "MAX_ITER_COUNT", "MIN_HUM_RATIO", "R_DA_IP", "R_DA_SI", "SetUnitSystem", "TRIPLE_POINT_WATER_IP", "TRIPLE_POINT_WATER_SI", "UnitSystem", "ZERO_CELSIUS_AS_KELVIN", "ZERO_FAHRENHEIT_AS_RANKINE", "dLnPws_", "isIP", "time_tools", "getLastNWeeks", "overlayPast", "selectiveResample", "str2dt", "time2timedelta", "wrangler", "compare_lists", "find_strs", "gapAndIsland", "mergeCloseEvents", "merge_df_cols", "merge_dfs", "two_letter_month_to_number", "Important Functions", "Welcome to the Otters Docs", "src", "Modules", "otters.drive", "otters.model", "Visualization (Vis)", "Wrangle"], "titleterms": {"__init__": [2, 6, 13, 22, 49, 54, 64, 66, 70, 81, 83, 89, 92], "addarealin": [23, 93], "addavgprodlin": 24, "addlegendlabel": 25, "addlin": [26, 94], "addlowachievedlin": 27, "addscatt": [28, 95], "addslid": 50, "addwtapschedul": 29, "ahu": 80, "boundyaxi": [30, 96], "calcpsychrometricsfromrelhum": 127, "calcpsychrometricsfromtdewpoint": 128, "calcpsychrometricsfromtwetbulb": 129, "class": [205, 206, 207], "cleancolnamesem": 84, "compare_list": 194, "create_conn": 108, "create_db": 109, "createahu": 85, "createdteventlabel": 31, "createplot": [32, 97], "createppt": 7, "createtimelin": [33, 98], "db_loader": 107, "dedup": 110, "dlnpws_": 185, "doc": 202, "downtimeev": 1, "drive": 205, "exp": [0, 5], "expsstylenam": 48, "file_load": 115, "find_str": 195, "fit": 55, "formatdata": 116, "formatxaxi": [34, 99], "formatyaxi": [35, 100], "formatyaxisunit": 36, "freezing_point_water_ip": 130, "freezing_point_water_si": 131, "full_setup": [37, 101], "function": 201, "gapandisland": 196, "get_metadata_rout": 56, "get_param": 57, "get_table_gaz": 120, "get_table_tarif_m": 121, "getcsv": 8, "getcsvdf": 117, "getcv": 71, "getcvrms": 72, "getdegreeofsatur": 132, "getdryairdens": 133, "getdryairenthalpi": 134, "getdryairvolum": 135, "getexcel": 9, "getexceldf": 118, "getfil": 119, "gethumratiofromenthalpyandtdrybulb": 136, "gethumratiofromrelhum": 137, "gethumratiofromspecifichum": 138, "gethumratiofromtdewpoint": 139, "gethumratiofromtwetbulb": 140, "gethumratiofromvappr": 141, "getlastnweek": 188, "getmoistairdens": 142, "getmoistairenthalpi": 143, "getmoistairvolum": 144, "getnasaweath": 111, "getnrowavg": 14, "getr2": 73, "getregequ": 74, "getrelhumfromhumratio": 145, "getrelhumfromtdewpoint": 146, "getrelhumfromtwetbulb": 147, "getrelhumfromvappr": 148, "getsatairenthalpi": 149, "getsathumratio": 150, "getsatvappr": 151, "getsealevelpressur": 152, "getspecifichumfromhumratio": 153, "getsql": 10, "getstandardatmpressur": 154, "getstandardatmtemperatur": 155, "getstationpressur": 156, "gettcelsiusfromtkelvin": 157, "gettdewpointfromhumratio": 158, "gettdewpointfromrelhum": 159, "gettdewpointfromtwetbulb": 160, "gettdewpointfromvappr": 161, "gettdrybulbfromenthalpyandhumratio": 162, "gettdrybulbfrommoistairvolumeandhumratio": 163, "gettfahrenheitfromtrankin": 164, "gettkelvinfromtcelsiu": 165, "gettrankinefromtfahrenheit": 166, "gettwetbulbfromhumratio": 167, "gettwetbulbfromrelhum": 168, "gettwetbulbfromtdewpoint": 169, "getunitsystem": 170, "getvaporpressuredeficit": 174, "getvappresfromhumratio": 171, "getvappresfromrelhum": 172, "getvappresfromtdewpoint": 173, "granulizedata": 38, "graph": [12, 87, 88], "import": 201, "import_config": 122, "isip": 186, "linearregress": 53, "load": 112, "max_iter_count": 175, "merge_df": 199, "merge_df_col": 198, "mergecloseev": 197, "min_hum_ratio": 176, "model": [63, 65, 206], "model_component_graph": 75, "modul": [204, 208], "note": [53, 59], "otter": [202, 205, 206], "overlaypast": 189, "paramet": [53, 55, 57, 58, 59, 60, 61, 62], "plot": [21, 91], "ppt_gen": 46, "pptgen": 47, "predict": 58, "psychrometr": 126, "r_da_ip": 177, "r_da_si": 178, "regress": [52, 67, 69, 76], "replace_backslashes_in_dict": 123, "return": [53, 55, 56, 57, 58, 59, 60, 61, 62], "save2xl": 124, "saveppt": [11, 51], "scaledtick": [39, 102], "score": 59, "selectiveresampl": 190, "set_fit_request": 60, "set_param": 61, "set_score_request": 62, "setavgnonprod": 3, "setavgprod": 15, "setdf": 16, "setdowntimeev": 17, "setlowachiev": 18, "setlowpercentag": 19, "settarget": 4, "setunitsystem": 179, "setyaxisrang": [40, 103], "show": [20, 41, 90, 104], "showlastweek": 42, "showlastyear": 43, "sparklin": [44, 105], "splitent": 86, "src": 203, "standardize_num_format": 125, "stat": 77, "str2dt": 191, "sub": 208, "tabulatemodel": 68, "time2timedelta": 192, "time_tool": 187, "timeformatxaxi": [45, 106], "to_fram": 78, "triple_point_water_ip": 180, "triple_point_water_si": 181, "ts2str": 113, "two_letter_month_to_numb": 200, "unitsystem": 182, "upsert": 114, "vi": 207, "virtualmet": [79, 82], "visual": 207, "welcom": 202, "wrangl": 208, "wrangler": 193, "zero_celsius_as_kelvin": 183, "zero_fahrenheit_as_rankin": 184}})